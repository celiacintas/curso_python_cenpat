
## Introducción a Pandas

# In[5]:

from IPython.display import IFrame
IFrame('http://pandas.pydata.org/', width=1000, height=350)


# Out[5]:

#     <IPython.lib.display.IFrame at 0x377f850>

# In[6]:

import pandas as pd
import numpy as np


# #### Cómo cargar y guardar datos desde diferentes fuentes ?

# In[7]:

df_txt = pd.read_csv("data/medidas.txt", header=None, parse_dates=[1], keep_date_col=True)
#df_txt = pd.read_csv('data/all_test.txt', sep='\t', header=None)
df_txt


# Out[7]:

#          0                   1      2
#     0    8 2013-11-28 11:00:00      0
#     1   15 2013-11-28 11:00:00    692
#     2   16 2013-11-28 11:00:00    367
#     3   17 2013-11-28 11:00:00      0
#     4   18 2013-11-28 11:00:00      0
#     5   20 2013-12-01 09:30:00     71
#     6    6 2013-12-05 15:45:00      0
#     7    5 2013-11-18 22:15:00  29705
#     8    6 2013-11-18 22:15:00  15364
#     9    7 2013-11-18 22:15:00  41482
#     10   8 2013-11-18 22:15:00  52487
#     11   9 2013-11-18 22:15:00      0
#     12  10 2013-11-18 22:15:00      0
#     13  13 2013-11-18 22:15:00  22792
#     14  14 2013-11-18 22:15:00  18182
#     15  15 2013-11-18 22:15:00      0
#     16  16 2013-11-18 22:15:00      0
#     17  17 2013-11-18 22:15:00  22273
#     18  18 2013-11-18 22:15:00  31488
#     19   7 2013-11-18 22:30:00  64266
#     20   8 2013-11-18 22:30:00  41479
#     21   9 2013-11-18 22:30:00      0
#     22  10 2013-11-18 22:30:00      0
#     23  13 2013-11-18 22:30:00  14344
#     24  14 2013-11-18 22:30:00  11270
#     25  15 2013-11-18 22:30:00      0
#     26  16 2013-11-18 22:30:00      0
#     27  17 2013-11-18 22:30:00  20481
#     28  18 2013-11-18 22:30:00  29696
#     29   5 2013-11-18 22:30:00  24585
#     30   6 2013-11-18 22:30:00  15364
#     31   7 2013-11-18 22:45:00  60170
#     32   8 2013-11-18 22:45:00  42247
#     33   9 2013-11-18 22:45:00      0
#     34  10 2013-11-18 22:45:00      0
#     35  13 2013-11-18 22:45:00  10248
#     36  14 2013-11-18 22:45:00  12806
#     37  15 2013-11-18 22:45:00      0
#     38  16 2013-11-18 22:45:00      0
#     39  17 2013-11-18 22:45:00  17921
#     40  18 2013-11-18 22:45:00  28416
#     41   5 2013-11-18 22:45:00  19977
#     42   6 2013-11-18 22:45:00  18692
#     43   9 2013-11-18 23:00:00      0
#     44  10 2013-11-18 23:00:00      0
#     45  13 2013-11-18 23:00:00  57351
#     46  14 2013-11-18 23:00:00  61957
#     47  15 2013-11-18 23:00:00      0
#     48  16 2013-11-18 23:00:00      0
#     49  17 2013-11-18 23:00:00  14849
#     50  18 2013-11-18 23:00:00  29440
#     51   5 2013-11-18 23:00:00    777
#     52   6 2013-11-18 23:00:00   8708
#     53   7 2013-11-18 23:00:00  34314
#     54   8 2013-11-18 23:00:00  18695
#     55   9 2013-11-18 23:15:00      0
#     56  10 2013-11-18 23:15:00      0
#     57  13 2013-11-18 23:15:00  39687
#     58  14 2013-11-18 23:15:00  48389
#     59  15 2013-11-18 23:15:00      0
#        ...                 ...    ...
#     
#     [129721 rows x 3 columns]

# In[8]:

df_txt.shape


# Out[8]:

#     (129721, 3)

# In[9]:

df_other_excel = pd.read_excel('data/other_demo.xls', 'Brasil (bio+socio)') # ver que sucede cuando ponemos header None
print df_other_excel.columns
df_other_excel


# Out[9]:

#     Index([u'CODE (ROOT)', u'SEX', u'1.EDAD', u'Indice cintura/estatura', u'BMI', u'MELANIN', u'EYE COLOR', u'BALDING', u'HAIR COLOR', u'GREYING', u'HAIR SHAPE', u'3. EDUC', u'6.1 TV', u'6.2 RADIO', u'6.3 BAÑO', u'6.4 AUTO', u'6.5 EMP.DOM.', u'6.6 ASP.', u'6.7 LAV.', u'6.8 VIDEO', u'6.9 NEV.', u'6.10 CONG', u'6.11 COMP.', u'6.12 LAVAP.', u'6.13 MOTO', u'6.14 BICI', u'25. USTED SE CONSIDERA', u'28.1 PORC. ANC. IND.', u'28.2 PORC. ANC. NEGR.', u'28.3 PORC. ANC. EUR.'], dtype='object')
# 

#        CODE (ROOT) SEX  1.EDAD  Indice cintura/estatura        BMI  MELANIN  \
#     0      ZBR0001   m      32                 0.556313  27.099205   32.780   
#     1      ZBR0003   m      42                 0.544450  26.968685   31.665   
#     2      ZBR0004   f      20                 0.404567  18.344819   24.050   
#     3      ZBR0005   m      24                 0.524217  26.271270   37.605   
#     4      ZBR0007   f      21                 0.400243  19.979754   38.750   
#     5      ZBR0008   f      22                 0.514921  23.421517   45.625   
#     6      ZBR0009   f      22                 0.516560  24.174154   47.625   
#     7      ZBR0010   f      21                 0.456384  22.303270   27.275   
#     8      ZBR0011   f      23                 0.525704  23.221356   31.915   
#     9      ZBR0012   f      21                 0.452612  19.931230   30.040   
#     10     ZBR0013   m      26                 0.566006  28.505164   37.720   
#     11     ZBR0014   m      25                 0.457968  21.855316   32.885   
#     12     ZBR0015   f      21                 0.479896  24.266496   29.910   
#     13     ZBR0016   f      21                 0.458384  20.000330   34.735   
#     14     ZBR0017   f      21                 0.523349  23.980853   31.755   
#     15     ZBR0018   f      19                 0.423264  19.962426   29.885   
#     16     ZBR0019   m      20                 0.470496  22.551112   28.615   
#     17     ZBR0020   m      20                 0.432537  20.101116   32.285   
#     18     ZBR0023   m      21                 0.490803  24.039640   33.720   
#     19     ZBR0024   m      18                 0.473049  23.077207   33.660   
#     20     ZBR0025   m      19                 0.425974  20.356107   28.100   
#     21     ZBR0027   f      18                 0.456566  22.188490   28.920   
#     22     ZBR0028   f      21                 0.492677  23.539280   38.355   
#     23     ZBR0031   f      20                 0.516762  24.628922   29.260   
#     24     ZBR0034   f      18                 0.472617  25.048006   32.660   
#     25     ZBR0035   m      21                 0.459795  19.855726   29.715   
#     26     ZBR0038   m      26                 0.463520  21.244715   37.855   
#     27     ZBR0040   f      22                 0.545339  27.101699   31.645   
#     28     ZBR0041   m      23                 0.482438  24.946913   38.185   
#     29     ZBR0042   m      24                 0.526109  31.132161   29.830   
#     30     ZBR0043   f      24                 0.391975  19.147234   27.955   
#     31     ZBR0044   f      50                 0.516327  23.289242   28.345   
#     32     ZBR0045   f      23                 0.417000  19.842533   32.095   
#     33     ZBR0046   f      23                 0.401844  20.631610   27.320   
#     34     ZBR0047   m      22                 0.439767  22.669892   31.445   
#     35     ZBR0048   m      35                 0.497055  25.613866   35.480   
#     36     ZBR0049   f      23                 0.425086  20.976813   30.825   
#     37     ZBR0050   f      43                 0.635127  34.629867   29.255   
#     38     ZBR0051   f      22                 0.484664  27.997471   31.695   
#     39     ZBR0052   f      51                 0.546597  32.178503   29.805   
#     40     ZBR0053   f      24                 0.499839  23.888441   34.740   
#     41     ZBR0054   m      29                 0.497644  23.688924   26.770   
#     42     ZBR0055   f      21                 0.449292  23.327641   30.475   
#     43     ZBR0056   f      48                 0.565859  29.219373   33.510   
#     44     ZBR0057   f      52                 0.561085  23.971775   28.220   
#     45     ZBR0058   f      27                 0.458548  24.345599   35.120   
#     46     ZBR0059   f      36                 0.547420  33.345521   31.210   
#     47     ZBR0060   m      19                 0.491430  26.589863   30.250   
#     48     ZBR0061   f      30                 0.574587  32.820844   33.930   
#     49     ZBR0062   m      56                 0.644147  32.699148   34.095   
#     50     ZBR0063   m      32                 0.443945  22.074008   33.325   
#     51     ZBR0066   m      83                 0.516636  23.129773   31.150   
#     52     ZBR0067   f      27                 0.395880  19.143417   27.760   
#     53     ZBR0068   m      43                 0.559726  25.626807   30.115   
#     54     ZBR0069   f      26                 0.393462  20.263061   30.045   
#     55     ZBR0070   m      29                 0.368655  16.466573   29.210   
#     56     ZBR0071   f      24                 0.406995  19.292369   34.925   
#     57     ZBR0072   f      33                 0.424469  22.093170   31.755   
#     58     ZBR0073   f      31                 0.431034  21.171885   27.510   
#     59     ZBR0074   f      25                 0.473131  21.233717   35.390   
#                ... ...     ...                      ...        ...      ...   
#     
#                EYE COLOR                BALDING              HAIR COLOR  \
#     0   dark brown/black      mild vertex balD.             brown/black   
#     1              green           no hair loss             brown/black   
#     2          blue/grey           no hair loss                   blond   
#     3              green           no hair loss  dark blond/light brown   
#     4   dark brown/black           no hair loss             brown/black   
#     5   dark brown/black           no hair loss             brown/black   
#     6          blue/grey           no hair loss  dark blond/light brown   
#     7        light brown           no hair loss  dark blond/light brown   
#     8              green           no hair loss             brown/black   
#     9        light brown           no hair loss             brown/black   
#     10  dark brown/black           no hair loss             brown/black   
#     11             green           no hair loss  dark blond/light brown   
#     12         blue/grey           no hair loss  dark blond/light brown   
#     13         blue/grey           no hair loss  dark blond/light brown   
#     14  dark brown/black           no hair loss             brown/black   
#     15  dark brown/black           no hair loss             brown/black   
#     16       light brown           no hair loss  dark blond/light brown   
#     17  dark brown/black           no hair loss             brown/black   
#     18  dark brown/black           no hair loss             brown/black   
#     19  dark brown/black          frontal bald.             brown/black   
#     20       light brown           no hair loss  dark blond/light brown   
#     21             green           no hair loss                   blond   
#     22  dark brown/black           no hair loss             brown/black   
#     23  dark brown/black           no hair loss  dark blond/light brown   
#     24  dark brown/black           no hair loss             brown/black   
#     25       light brown           no hair loss  dark blond/light brown   
#     26             green           no hair loss  dark blond/light brown   
#     27  dark brown/black           no hair loss             brown/black   
#     28  dark brown/black           no hair loss             brown/black   
#     29             green           no hair loss             brown/black   
#     30             honey           no hair loss  dark blond/light brown   
#     31  dark brown/black           no hair loss             brown/black   
#     32  dark brown/black           no hair loss  dark blond/light brown   
#     33             honey           no hair loss  dark blond/light brown   
#     34  dark brown/black           no hair loss             brown/black   
#     35             honey           no hair loss             brown/black   
#     36       light brown           no hair loss  dark blond/light brown   
#     37  dark brown/black           no hair loss             brown/black   
#     38  dark brown/black           no hair loss             brown/black   
#     39  dark brown/black           no hair loss  dark blond/light brown   
#     40  dark brown/black           no hair loss             brown/black   
#     41  dark brown/black           no hair loss             brown/black   
#     42             green           no hair loss             brown/black   
#     43  dark brown/black           no hair loss             brown/black   
#     44             green           no hair loss             brown/black   
#     45  dark brown/black           no hair loss             brown/black   
#     46             green           no hair loss  dark blond/light brown   
#     47             honey           no hair loss             brown/black   
#     48  dark brown/black           no hair loss  dark blond/light brown   
#     49             green           no hair loss             brown/black   
#     50  dark brown/black           no hair loss             brown/black   
#     51         blue/grey  moderate vertex bald.  dark blond/light brown   
#     52             honey           no hair loss  dark blond/light brown   
#     53  dark brown/black      mild vertex balD.             brown/black   
#     54  dark brown/black           no hair loss  dark blond/light brown   
#     55  dark brown/black          frontal bald.             brown/black   
#     56  dark brown/black           no hair loss             brown/black   
#     57  dark brown/black           no hair loss             brown/black   
#     58       light brown          frontal bald.  dark blond/light brown   
#     59       light brown           no hair loss             brown/black   
#                      ...                    ...                     ...   
#     
#                   GREYING HAIR SHAPE     3. EDUC  6.1 TV  6.2 RADIO  6.3 BAÑO  \
#     0   predom.no-greying   straight     Tecnol.       3          2         2   
#     1   predom.no-greying       wavy  Secundaria       3          2         2   
#     2          no greying   straight  Secundaria       1          1         2   
#     3          no greying      curly  Secundaria       1          1         2   
#     4          no greying       wavy       Univ.       1          0         1   
#     5          no greying      curly  Secundaria       1          2         2   
#     6          no greying      curly  Secundaria       1          0         2   
#     7          no greying   straight  Secundaria       1          0         1   
#     8          no greying   straight     Tecnol.       2          1         1   
#     9          no greying   straight  Secundaria       2          1         1   
#     10         no greying      curly  Secundaria       3          1         2   
#     11         no greying      curly  Secundaria       2          1         2   
#     12         no greying       wavy  Secundaria       3          2         1   
#     13         no greying       wavy  Secundaria       1          1         1   
#     14         no greying   straight       Univ.       3          1         3   
#     15         no greying   straight  Secundaria       1          1         1   
#     16         no greying       wavy  Secundaria       1          1         1   
#     17         no greying       wavy  Secundaria       2          1         1   
#     18         no greying   straight  Secundaria       1          0         1   
#     19         no greying      curly  Secundaria       1          1         1   
#     20         no greying       wavy  Secundaria       1          0         1   
#     21         no greying       wavy  Secundaria       1          1         1   
#     22         no greying      curly  Secundaria       2          2         3   
#     23         no greying   straight  Secundaria       2          1         2   
#     24         no greying       wavy  Secundaria       2          2         2   
#     25         no greying   straight  Secundaria       5          2         3   
#     26         no greying      curly     Tecnol.       4          3         3   
#     27         no greying       wavy       Univ.       2          1         2   
#     28         no greying       wavy       Univ.       2          0         3   
#     29         no greying   straight  Secundaria       5          3         4   
#     30         no greying       wavy  Secundaria       1          1         2   
#     31         no greying       wavy  Secundaria       2          2         2   
#     32         no greying   straight       Univ.       1          1         1   
#     33         no greying   straight  Secundaria       2          1         2   
#     34         no greying   straight       Univ.       0          0         1   
#     35         no greying       wavy       Univ.       1          1         1   
#     36         no greying   straight       Univ.       1          1         1   
#     37         no greying       wavy   Postgrado       3          2         2   
#     38         no greying       wavy  Secundaria       1          1         3   
#     39  predom.no-greying       wavy       Univ.       2          1         1   
#     40         no greying   straight       Univ.       2          2         2   
#     41  predom.no-greying       wavy  Secundaria       3          1         2   
#     42         no greying   straight  Secundaria       3          2         2   
#     43         no greying       wavy       Univ.       1          1         1   
#     44  predom.no-greying      curly   Postgrado       4          3         3   
#     45         no greying   straight  Secundaria       2          1         2   
#     46         no greying       wavy   Postgrado       2          0         2   
#     47         no greying       wavy  Secundaria       2          1         3   
#     48         no greying   straight   Postgrado       0          2         0   
#     49         50%greying       wavy   Postgrado       4          2         4   
#     50  predom.no-greying   straight   Postgrado       1          1         1   
#     51     predom.greying       wavy   Postgrado       1          1         1   
#     52         no greying      curly   Postgrado       4          4         3   
#     53         50%greying   straight   Postgrado       1          3         1   
#     54         no greying   straight       Univ.       1          1         1   
#     55         no greying   straight   Postgrado       2          0         1   
#     56         no greying       wavy  Secundaria       2          4         3   
#     57         no greying       wavy   Postgrado       4          3         1   
#     58         no greying       wavy   Postgrado       1          1         1   
#     59         no greying       wavy   Postgrado       3          1         4   
#                       ...        ...         ...     ...        ...       ...   
#     
#         6.4 AUTO  6.5 EMP.DOM.  6.6 ASP.  6.7 LAV.  6.8 VIDEO      
#     0          1             1         1         1          2 ...  
#     1          1             0         1         1          2 ...  
#     2          0             0         1         0          1 ...  
#     3          0             0         0         0          0 ...  
#     4          0             0         0         0          0 ...  
#     5          0             0         0         1          1 ...  
#     6          0             0         0         1          1 ...  
#     7          0             0         0         1          1 ...  
#     8          0             0         0         1          1 ...  
#     9          0             0         0         1          0 ...  
#     10         1             0         0         1          1 ...  
#     11         1             1         0         1          1 ...  
#     12         0             0         0         1          1 ...  
#     13         1             0         0         1          1 ...  
#     14         1             0         1         1          2 ...  
#     15         0             0         1         1          1 ...  
#     16         0             0         0         1          0 ...  
#     17         0             0         0         0          1 ...  
#     18         0             0         0         0          0 ...  
#     19         0             0         0         0          0 ...  
#     20         1             0         0         0          1 ...  
#     21         0             0         0         0          1 ...  
#     22         0             0         0         2          2 ...  
#     23         1             0         0         1          1 ...  
#     24         0             0         0         1          1 ...  
#     25         1             0         1         1          3 ...  
#     26         1             0         0         1          2 ...  
#     27         1             0         0         1          1 ...  
#     28         2             1         1         1          1 ...  
#     29         1             0         1         1          2 ...  
#     30         1             0         1         1          1 ...  
#     31         2             0         1         1          1 ...  
#     32         0             0         1         1          1 ...  
#     33         1             1         2         1          1 ...  
#     34         0             0         0         0          0 ...  
#     35         1             0         0         1          2 ...  
#     36         0             0         0         1          1 ...  
#     37         1             1         1         1          2 ...  
#     38         0             0         1         1          0 ...  
#     39         1             0         1         1          2 ...  
#     40         0             0         1         1          0 ...  
#     41         0             0         1         1          1 ...  
#     42         1             0         1         1          2 ...  
#     43         1             0         0         1          0 ...  
#     44         2             0         1         2          2 ...  
#     45         0             0         1         1          1 ...  
#     46         1             1         1         1          1 ...  
#     47         2             1         1         2          1 ...  
#     48         1             0         0         0          0 ...  
#     49         2             1         2         1          3 ...  
#     50         0             0         0         1          1 ...  
#     51         1             0         1         1          1 ...  
#     52         1             1         1         1          2 ...  
#     53         1             1         1         1          1 ...  
#     54         0             0         0         0          0 ...  
#     55         0             0         0         0          0 ...  
#     56         1             1         1         1          1 ...  
#     57         1             0         1         1          2 ...  
#     58         0             0         1         1          1 ...  
#     59         1             1         0         1          1 ...  
#              ...           ...       ...       ...        ...      
#     
#     [1240 rows x 30 columns]

# In[10]:

df_excel = pd.read_excel('data/demo.xls', 'Sheet1', header=None)
df_excel


# Out[10]:

#              0          1          2            3          4          5   \
#     0   ZBR0001  51.176058  15.965435 -1276.952988  53.673303 -35.076741   
#     1   ZBR0003  38.409853  -7.148524  -846.575356  41.771747 -37.773989   
#     2   ZBR0004  45.816225  15.823300  -596.571110  51.664858 -25.809904   
#     3   ZBR0005  38.620632   5.744580  -873.874648  43.372720 -28.189625   
#     4   ZBR0006  46.385489  13.519029 -1111.361468  53.575133 -27.719261   
#     5   ZBR0007  51.098207  11.701928  -956.646570  57.964452 -31.556037   
#     6   ZBR0008  48.545577  15.063684 -1128.598519  52.889821 -25.360880   
#     7   ZBR0009  45.476121  23.103170 -1295.830204  47.266736 -16.917312   
#     8   ZBR0010  44.387561   8.342352  -840.156527  52.288877 -30.596965   
#     9   ZBR0011  44.274230   2.090862 -1008.527874  43.227657 -42.206894   
#     10  ZBR0012  44.302263  18.318219  -722.241221  50.046416 -27.053497   
#     11  ZBR0013  64.501391  28.880884 -1818.597342  61.799488 -14.849388   
#     12  ZBR0014  64.867899   6.243807  -445.696451  71.667111 -21.802725   
#     13  ZBR0015  50.045660  18.936429  -225.641439  53.400854 -18.150979   
#     14  ZBR0016  49.121748  13.032218 -1100.146932  51.817720 -26.596470   
#     15  ZBR0017  43.949918  13.738655  -332.820857  46.634982 -27.228655   
#     16  ZBR0018  47.953748  19.137333  -750.637593  55.902534 -22.554023   
#     17  ZBR0019  48.151000  20.254707  -903.408829  53.828010 -20.817511   
#     18  ZBR0020  48.448404  17.958570  -776.512444  55.933538 -26.282598   
#     19  ZBR0021  47.575513   5.604029 -1011.592629  53.640021 -36.199950   
#     20  ZBR0022  48.443911  -1.206901 -1269.023273  49.193068 -40.890753   
#     21  ZBR0023  43.030002  25.443094  -706.525184  53.357503 -17.968346   
#     22  ZBR0024  50.274485  22.193814  -407.044685  57.000733 -24.368459   
#     23  ZBR0025  43.384057  17.757166  -286.487547  51.683096 -22.709895   
#     24  ZBR0026  42.931883  11.536696  -340.625053  42.556156 -30.563716   
#     25  ZBR0027  39.704279  13.473329  -703.794376  47.474251 -29.952984   
#     26  ZBR0028  52.159629   9.566438 -1178.684937  58.304494 -28.265637   
#     27  ZBR0029  46.942882  22.851721 -1112.340405  54.106996 -27.543696   
#     28  ZBR0030  54.804034  15.698089  -335.569582  59.427788 -37.135807   
#     29  ZBR0031  44.827350   1.877946 -1233.944871  47.611733 -40.239118   
#     30  ZBR0032  37.228878  -9.054181  -413.801951  42.860466 -35.790664   
#     31  ZBR0033  42.639891  -3.917807  -531.014688  50.875333 -36.622825   
#     32  ZBR0034  34.287077   2.829893 -1246.642827  40.228546 -38.160533   
#     33  ZBR0035  40.084747  13.288605 -1063.113084  49.465594 -24.829024   
#     34  ZBR0036  49.102198  13.827164  -582.029844  52.377459 -26.979462   
#     35  ZBR0037  46.053666   9.463583  -364.643585  46.188631 -42.798529   
#     36  ZBR0038  41.077761 -10.688831  -825.928706  44.332719 -44.490981   
#     37  ZBR0039  43.168772  14.385121  -346.801661  44.173536 -21.050804   
#     38  ZBR0040  43.629799  12.325251  -477.362237  46.238412 -28.181789   
#     39  ZBR0041  42.451959 -13.172586 -1616.773558  46.893537 -51.493795   
#     40  ZBR0042  53.059704  14.831421  -606.191164  59.697282 -35.578067   
#     41  ZBR0043  62.654544  -9.519442 -1783.542679  69.169112 -48.506538   
#     42  ZBR0044  46.237342 -16.787522  -303.507065  43.823441 -44.652424   
#     43  ZBR0045  65.113975  -8.028629 -1277.341502  68.273792 -47.918163   
#     44  ZBR0046  44.885101  -0.440904 -1498.801984  53.163420 -38.259440   
#     45  ZBR0047  45.605616  11.835825  -690.922658  55.640745 -32.927758   
#     46  ZBR0048  47.360352  14.216087  -708.179634  48.280264 -26.897860   
#     47  ZBR0049  42.976848  19.853576  -563.592608  46.634500 -24.830931   
#     48  ZBR0050  59.422241   2.135777  -567.386575  55.491472 -46.334998   
#     49  ZBR0051  56.380905  -4.539994 -1304.525771  59.788239 -42.137444   
#     50  ZBR0052  42.623076   1.319274  -466.672877  49.699868 -28.571390   
#     51  ZBR0053  36.011944   8.887452 -1158.237949  37.549185 -31.807342   
#     52  ZBR0054  35.769251   8.827558 -1150.432302  37.296132 -31.592985   
#     53  ZBR0055  32.261656   0.600482 -1426.071278  36.554161 -36.516625   
#     54  ZBR0056  38.306968  -9.350759 -1373.062141  42.180040 -55.901311   
#     55  ZBR0057  45.382206   4.002739  -776.382514  49.492481 -37.330268   
#     56  ZBR0058  34.504541  -1.244126 -1151.910149  37.084145 -42.056083   
#     57  ZBR0059  65.129851 -14.665883  -621.163198  71.120037 -44.269605   
#     58  ZBR0060  45.074118  12.514026  -660.335142  54.337776 -34.068893   
#     59  ZBR0061  50.857978  13.927255  -477.544267  53.967120 -28.988303   
#             ...        ...        ...          ...        ...        ...   
#     
#                  6          7          8            9          10          11  \
#     0  -1287.062579  34.458181 -53.981072 -1308.800721  40.612316  -88.868164   
#     1   -879.240473  21.638896 -41.464481  -898.810894  10.736800  -25.276129   
#     2   -583.893348  37.113138 -43.500316  -589.515981  23.195852 -103.387990   
#     3   -888.631030  29.358465 -42.845421  -909.859435  33.596873  -62.104514   
#     4  -1123.022061  44.244195 -42.347962 -1136.401589  33.748285  -68.169614   
#     5   -961.701867  40.867671 -46.746246  -975.068603  30.522986  -80.839858   
#     6  -1135.875344  41.873097 -40.639912 -1151.487975  46.347633  -66.852812   
#     7  -1314.484881  39.827821 -26.126626 -1329.191855  36.307915  -36.740526   
#     8   -840.986679  34.815069 -51.885433  -852.803896  31.171276  -94.897436   
#     9  -1024.363259  31.458052 -49.373511 -1041.830246  24.188577  -71.725845   
#     10  -721.307983  31.126553 -41.695060  -733.811991  18.781858  -85.570971   
#     11 -1843.902071  38.793353 -25.099258 -1870.278125  44.893773  -33.998104   
#     12  -471.695924  53.760950 -37.839017  -488.331262   8.494966  -45.876202   
#     13  -212.480078  37.560960 -38.947039  -220.823853  24.833355  -95.907728   
#     14 -1102.539466  42.684950 -41.449140 -1113.919851  41.084017  -86.466490   
#     15  -324.951642  30.681994 -47.079289  -332.153222  19.509952  -98.053578   
#     16  -747.487231  40.756129 -45.367793  -758.542974  32.517447  -93.912103   
#     17  -906.610423  34.204357 -48.605490  -930.654308  35.498230  -81.804531   
#     18  -775.552054  35.150795 -54.122134  -789.605362  27.071050 -105.425116   
#     19 -1029.761524  39.122035 -47.004378 -1054.180974  37.129997  -62.583408   
#     20 -1285.614476  32.925180 -53.978494 -1300.553026  25.468533  -74.592291   
#     21  -706.872516  30.990607 -45.454004  -722.447103  34.530766  -86.826105   
#     22  -400.697186  36.311946 -52.738933  -411.160055  26.160630 -110.583923   
#     23  -280.741352  32.850303 -48.661335  -288.837613  27.242727 -100.840851   
#     24  -325.436107  20.811303 -58.870364  -333.907828  18.532844 -117.869960   
#     25  -699.598609  33.110910 -51.381136  -706.128014  26.485372  -96.204900   
#     26 -1200.294522  41.634265 -41.483002 -1226.289155  32.968466  -52.005415   
#     27 -1108.644662  39.452805 -46.824293 -1121.104000  30.443348 -106.987845   
#     28  -336.815040  35.389005 -56.548645  -344.399330   9.805282 -119.029555   
#     29 -1240.156698  34.619555 -54.651775 -1256.446285  38.624005  -90.755226   
#     30  -443.695088  29.011923 -39.326989  -465.703842  21.468984  -20.678038   
#     31  -559.319756  26.713525 -44.800022  -579.697553  22.752668  -36.706050   
#     32 -1264.158078  32.966618 -50.851033 -1286.684602  31.530177  -63.169941   
#     33 -1072.257238  23.006405 -43.532723 -1088.846533  30.597294  -73.943380   
#     34  -570.749929  37.126229 -47.890470  -573.673799  20.823181 -110.140522   
#     35  -360.647164  24.483399 -63.196166  -372.658589  -3.344559 -116.809173   
#     36  -867.745376  32.294945 -41.083029  -887.931818  37.389352  -21.412697   
#     37  -337.477922  29.573332 -46.760069  -345.070576   6.771010  -98.617995   
#     38  -466.146245  29.468325 -54.116765  -474.490733  -1.103898 -107.909491   
#     39 -1634.718164  33.518403 -66.664917 -1652.832969  23.531235  -82.420520   
#     40  -611.236638  37.902371 -55.679611  -624.147055  40.754818  -96.178772   
#     41 -1798.729061  58.547795 -62.095777 -1812.535383  52.652548  -84.088942   
#     42  -313.501021  28.976494 -55.454213  -319.175426   3.348232  -63.088878   
#     43 -1281.155980  58.859240 -65.987623 -1294.023234  54.275447 -106.189994   
#     44 -1516.570817  39.934020 -52.390955 -1533.529148  27.735903  -62.620305   
#     45  -692.951611  33.446735 -59.341762  -713.980731  48.795730 -105.003824   
#     46  -703.634817  27.124336 -49.494680  -716.306701  20.073884 -104.579655   
#     47  -562.315695  37.054544 -42.580312  -570.026266  22.033160  -86.180630   
#     48  -574.040304  37.174651 -62.522045  -586.927059   3.239538  -95.206875   
#     49 -1329.825343  43.503387 -49.299838 -1352.390767  35.613437  -55.403151   
#     50  -507.268915  31.719680 -31.749315  -531.151137  10.224146   -7.444271   
#     51 -1166.763274  15.281900 -50.629981 -1186.899039   4.483708  -82.232734   
#     52 -1158.900172  15.178911 -50.288773 -1178.900238   4.453492  -81.678548   
#     53 -1439.560410  29.077638 -48.309669 -1452.610158  25.127483  -68.650942   
#     54 -1387.263805  23.581751 -66.382103 -1395.755306   2.620635  -97.569577   
#     55  -774.257262  30.849307 -52.670776  -781.242238  13.594909  -99.250500   
#     56 -1168.420653  17.247465 -53.700720 -1192.054736   0.127422  -68.782852   
#     57  -655.349622  53.357925 -43.749482  -681.415493  49.175730  -12.724575   
#     58  -673.924611  40.012446 -54.478346  -704.470968  41.066546  -79.975507   
#     59  -497.762109  37.527648 -43.452725  -520.075216  37.074264  -58.410631   
#                 ...        ...        ...          ...        ...         ...   
#     
#                  12         13         14           15         16         17  \
#     0  -1393.183763   2.705394 -75.769445 -1375.304149 -25.214447 -71.093891   
#     1   -973.524585 -14.561010 -29.934256  -954.684368 -36.995369 -31.829567   
#     2   -638.366521  -6.236592 -88.799338  -628.598434 -30.556681 -82.875320   
#     3   -981.192284   0.845580 -55.383441  -965.250906 -17.198448 -53.909256   
#     4  -1204.018950   5.712548 -57.843938 -1192.013050 -17.485675 -58.283065   
#     5  -1043.347770   2.004194 -71.739853 -1029.913532 -24.038101 -67.821774   
#     6  -1226.597714  17.317197 -56.886972 -1217.046918  -4.664372 -56.796799   
#     7  -1408.662895   5.354630 -25.145438 -1399.459292 -17.034782 -20.323936   
#     8   -914.257574   1.143718 -85.269135  -899.472295 -22.410931 -79.577525   
#     9  -1113.602303  -5.344347 -58.272800 -1101.485663 -29.829530 -52.105337   
#     10  -785.101776  -7.880204 -68.048145  -771.059017 -28.968537 -68.497280   
#     11 -1957.103346   5.551930 -23.845230 -1936.057466 -19.426476 -21.450649   
#     12  -548.856376  -8.160257 -50.379546  -523.521706 -26.132219 -60.830526   
#     13  -264.755956  -3.192695 -78.214098  -258.365157 -25.491711 -77.594746   
#     14 -1193.699840  13.226875 -68.433268 -1183.355227 -12.649793 -62.892648   
#     15  -388.199712  -9.919359 -82.547442  -375.873027 -32.657551 -74.787000   
#     16  -813.343377   3.064292 -77.842236  -804.624695 -21.186616 -76.364740   
#     17  -988.093889   2.737631 -69.503413  -971.783217 -21.049701 -65.904201   
#     18  -846.143491  -1.787221 -93.235538  -827.498923 -28.793091 -90.576944   
#     19 -1129.133614   4.301397 -55.368614 -1111.605801 -18.738555 -55.393970   
#     20 -1376.420210  -5.486610 -63.485145 -1359.648585 -30.057690 -58.384764   
#     21  -778.127999   2.390783 -76.270230  -767.858374 -22.339955 -72.229236   
#     22  -466.304542  -5.268160 -93.549868  -453.494620 -31.836215 -87.742867   
#     23  -343.019729  -3.780146 -84.542083  -332.475302 -25.466623 -82.523117   
#     24  -374.738018  -8.424522 -95.646325  -369.344221 -32.895237 -96.558950   
#     25  -757.893391  -5.886335 -82.542751  -752.799575 -28.863707 -81.055134   
#     26 -1296.226510   3.038703 -45.932217 -1279.471305 -18.375392 -41.098317   
#     27 -1188.788029  -6.792117 -91.112058 -1179.429297 -39.891299 -89.153880   
#     28  -394.240806 -19.895131 -93.755268  -374.970624 -42.027782 -92.131354   
#     29 -1320.440391   7.086441 -75.362133 -1314.970501 -16.880212 -72.541923   
#     30  -529.030102  -8.490159 -21.902511  -512.287343 -28.345918 -16.610159   
#     31  -660.200050  -4.050067 -36.792072  -637.298497 -27.310715 -34.272693   
#     32 -1367.562504   4.339665 -56.982773 -1351.289879 -17.335711 -52.284855   
#     33 -1150.923231  -0.880048 -62.423087 -1135.375171 -21.368099 -60.350793   
#     34  -625.227694  -3.926458 -88.076906  -614.124426 -29.665329 -82.179707   
#     35  -429.319695 -32.938351 -93.930194  -411.101909 -56.775421 -84.611648   
#     36  -965.833569   4.116583 -19.839793  -948.377968 -21.534247 -14.525206   
#     37  -395.726405 -15.802179 -81.296344  -381.228000 -40.829169 -76.575678   
#     38  -527.362709 -25.438472 -88.439814  -514.325622 -47.003510 -83.277699   
#     39 -1735.949409  -5.720833 -72.973229 -1717.636514 -26.912317 -68.167558   
#     40  -699.201396   3.385598 -88.367848  -681.980389 -20.410847 -86.922821   
#     41 -1893.782632  20.222942 -74.050671 -1878.420485  -3.938560 -70.909075   
#     42  -374.191115 -16.155546 -56.976364  -356.324686 -34.566127 -53.156460   
#     43 -1362.197542  23.907193 -88.279323 -1351.924154  -0.828396 -84.628896   
#     44 -1609.191807  -0.821089 -53.683676 -1593.573519 -27.179839 -48.526182   
#     45  -782.298394  11.456671 -90.853864  -772.800780 -17.530478 -91.052221   
#     46  -775.980473 -11.910693 -87.141797  -761.256972 -37.267745 -84.301228   
#     47  -624.071570  -6.327171 -73.127714  -615.062905 -32.675626 -70.550574   
#     48  -637.483150 -21.373032 -79.024956  -619.812993 -47.026976 -71.752805   
#     49 -1419.720448   2.623068 -48.162810 -1404.170129 -25.662091 -46.786837   
#     50  -606.666697 -19.062027 -20.542464  -577.267800 -46.491907 -26.310659   
#     51 -1249.749496 -23.578274 -66.985190 -1234.745203 -47.330094 -64.452853   
#     52 -1241.327131 -23.419375 -66.533760 -1226.423955 -47.011125 -64.018489   
#     53 -1533.223184  -6.275009 -59.475855 -1518.859056 -32.071641 -57.038172   
#     54 -1471.445087 -26.109826 -85.150860 -1451.904311 -56.897147 -78.977669   
#     55  -839.149643 -13.950367 -84.365601  -824.005235 -39.786003 -71.070480   
#     56 -1263.591957 -25.365409 -59.594952 -1244.018197 -50.888824 -56.483577   
#     57  -768.513654  11.398139 -15.415621  -748.421126 -14.559902  -9.707307   
#     58  -786.323245   7.804211 -76.219793  -763.266171 -19.158245 -78.090260   
#     59  -601.892472   1.153807 -54.791210  -586.697170 -27.531176 -55.093427   
#                 ...        ...        ...          ...        ...        ...   
#     
#                  18         19      
#     0  -1379.029129  31.866415 ...  
#     1   -950.122680  18.943440 ...  
#     2   -628.731779  26.380467 ...  
#     3   -967.421684  24.711441 ...  
#     4  -1191.388807  28.772625 ...  
#     5  -1027.200641  28.300558 ...  
#     6  -1221.921602  31.319086 ...  
#     7  -1401.835176  23.716920 ...  
#     8   -901.752506  27.120426 ...  
#     9  -1102.664054  22.790475 ...  
#     10  -767.074099  24.116417 ...  
#     11 -1936.018058  35.766821 ...  
#     12  -511.635363  46.482030 ...  
#     13  -258.391179  24.295693 ...  
#     14 -1185.720650  31.602467 ...  
#     15  -374.671045  22.871583 ...  
#     16  -801.263016  33.082075 ...  
#     17  -971.453241  32.958360 ...  
#     18  -825.640206  30.555127 ...  
#     19 -1117.644817  30.861931 ...  
#     20 -1360.874939  26.098559 ...  
#     21  -765.273781  28.587452 ...  
#     22  -443.988911  32.507964 ...  
#     23  -327.639218  26.812674 ...  
#     24  -368.109004  21.935689 ...  
#     25  -751.042779  21.104824 ...  
#     26 -1279.780459  30.313737 ...  
#     27 -1177.704972  26.035865 ...  
#     28  -367.771980  32.519010 ...  
#     29 -1319.048665  24.499322 ...  
#     30  -511.919025  18.767089 ...  
#     31  -636.863586  24.547183 ...  
#     32 -1353.199694  18.664717 ...  
#     33 -1134.602013  24.254906 ...  
#     34  -610.127291  27.259322 ...  
#     35  -402.894191  21.715915 ...  
#     36  -951.703529  20.870621 ...  
#     37  -376.253041  22.086433 ...  
#     38  -511.698835  17.474448 ...  
#     39 -1713.974373  25.508171 ...  
#     40  -681.237728  37.878385 ...  
#     41 -1877.833458  44.351745 ...  
#     42  -350.396758  24.426898 ...  
#     43 -1351.149656  48.326163 ...  
#     44 -1591.284623  27.806947 ...  
#     45  -774.530991  29.503494 ...  
#     46  -759.282808  27.045059 ...  
#     47  -614.482470  24.665926 ...  
#     48  -616.698585  24.114782 ...  
#     49 -1401.745927  32.143455 ...  
#     50  -569.477232  26.980402 ...  
#     51 -1235.063349  12.919474 ...  
#     52 -1226.739957  12.832406 ...  
#     53 -1521.767940  14.826112 ...  
#     54 -1453.538249  14.482269 ...  
#     55  -818.414179  22.830767 ...  
#     56 -1238.005896  12.196477 ...  
#     57  -750.173101  43.140438 ...  
#     58  -760.146913  32.227096 ...  
#     59  -582.865700  28.388505 ...  
#                 ...        ...      
#     
#     [3960 rows x 133 columns]

# In[11]:

df_excel.shape


# Out[11]:

#     (3960, 133)

# In[12]:

df_html = pd.read_html('data/lista_landmark.html')
df_html


# Out[12]:

#     [       0                     1                           2
#     0   Type                 Value                        Text
#     1    NaN                   NaN              Fiducials List
#     2    NaN    6.2, 128.7, -580.1       Espina nasal anterior
#     3    NaN    7.2, 154.8, -570.5               Infraposnasal
#     4    NaN   10.4, 121.4, -576.3                   Nariale R
#     5    NaN    2.9, 121.9, -578.2                   Nariale L
#     6    NaN   18.5, 118.8, -565.0                Alare oseo R
#     7    NaN   -6.4, 120.5, -566.9                Alare oseo L
#     8    NaN   25.8, 132.4, -575.0              Alare blando R
#     9    NaN  -11.3, 136.4, -575.0              Alare blando L
#     10   NaN   17.5, 117.2, -559.5     Concha nasal anterior R
#     11   NaN   -5.4, 115.9, -563.7     Concha nasal anterior L
#     12   NaN    8.9, 127.9, -575.0           Subalare medial R
#     13   NaN    2.1, 127.0, -575.0           Subalare medial L
#     14   NaN   20.6, 131.0, -575.0          Subalare lateral R
#     15   NaN   -5.7, 134.8, -575.0          Subalare lateral L
#     16   NaN   11.4, 148.9, -575.0         Subalare anterior R
#     17   NaN    4.4, 149.5, -575.0         Subalare anterior L
#     18   NaN    5.3, 140.4, -544.7                     Rhinion
#     19   NaN    5.3, 128.4, -522.5                      Nasion
#     20   NaN   15.3, 125.5, -524.4               Nasomaxilar R
#     21   NaN   -3.5, 126.1, -524.0               Nasomaxilar L
#     22   NaN    16.3, 76.8, -527.8              Canal optico R
#     23   NaN    -8.3, 82.8, -527.7              Canal optico L
#     24   NaN     7.0, 67.3, -557.3                     Hormion
#     25   NaN     6.9, 77.4, -572.8      Espina nasal posterior
#     26   NaN    17.0, 82.3, -574.8            Coana anterior R
#     27   NaN    -2.3, 81.9, -574.8            Coana anterior L
#     28   NaN    15.1, 65.5, -552.1           Coana posterior R
#     29   NaN    -1.6, 62.6, -553.1            Coana posterir L
#     30   NaN    -8.2, 72.0, -567.1             Coana lateral R
#     31   NaN    21.9, 72.3, -566.0             Coana lateral L
#     32   NaN     6.8, 72.4, -566.0           Coana posterior R
#     33   NaN     6.2, 71.8, -567.0           Coana posterior L
#     34   NaN    -6.5, 79.1, -561.9    Concha nasal posterior R
#     35   NaN    21.0, 78.1, -561.0    Concha nasal posterior L
#     36   NaN   14.9, 128.6, -552.7            Nasal inferior R
#     37   NaN   -3.9, 128.6, -555.0            Nasal inferior L
#     38   NaN                   NaN                  Ruler List
#     39   NaN             51.4 [mm]              Longitud total
#     40   NaN              0.0 [mm]               Longtud media
#     41   NaN    6.9, 102.6, -579.4                     Plano B
#     42   NaN    6.6, 102.6, -577.3            Tabique inferior
#     43   NaN   22.9, 102.6, -575.7              Piso lateral R
#     44   NaN  -12.5, 102.6, -575.2              Piso lateral L
#     45   NaN   26.3, 102.6, -561.3      Margen medio lateral R
#     46   NaN  -12.4, 102.6, -563.4      Margen medio lateral L
#     47   NaN    6.1, 102.6, -527.5               Tabique medio
#     48   NaN    19.5, 77.6, -572.4    Piso posterior lateral R
#     49   NaN    -6.9, 77.6, -572.3    Piso posterior lateral L
#     50   NaN    21.3, 77.6, -561.4  Margen posterior lateral R
#     51   NaN    -7.4, 77.6, -562.0  Margen posterior lateral L
#     52   NaN     6.6, 77.6, -547.6           Tabique posterior
#     
#     [53 rows x 3 columns]]

# In[13]:

get_ipython().set_next_input(u'df_ = pd.read_stata');get_ipython().magic(u'pinfo pd.read_stata')


# In[ ]:

df_ = pd.read_stata


# In[14]:

df_ = pd.read_stata


# In[15]:

df_ = pd.read_stata


# In[16]:

df_ = pd.read_stata


# In[17]:

get_ipython().set_next_input(u'df_ = pd.read_hdf');get_ipython().magic(u'pinfo pd.read_hdf')


# In[19]:

#df_txt.to_excel('data/test_out.xls', header=False, index=False) # cuidado con límites de planillas de excel!


# In[20]:

df_excel.to_csv('data/test_out.txt', index=False)


# In[21]:

get_ipython().magic(u'pinfo df_excel.to_clipboard')


# #### Conociendo las estructuras de Pandas

# #### Series

# In[22]:

mi_serie = pd.Series([3.4, 56.3, 56.1])
print mi_serie.values
print mi_serie.index
mi_serie


# Out[22]:

#     [  3.4  56.3  56.1]
#     Int64Index([0, 1, 2], dtype='int64')
# 

#     0     3.4
#     1    56.3
#     2    56.1
#     dtype: float64

# In[23]:

mi_serie = pd.Series([3.4, 56.3, 56.1], index=['dist_1', 'dist_2', 'dist_3'])
print mi_serie.values
print mi_serie.index
print mi_serie['dist_2']
print mi_serie[['dist_1', 'dist_3']]
mi_serie


# Out[23]:

#     [  3.4  56.3  56.1]
#     Index([u'dist_1', u'dist_2', u'dist_3'], dtype='object')
#     56.3
#     dist_1     3.4
#     dist_3    56.1
#     dtype: float64
# 

#     dist_1     3.4
#     dist_2    56.3
#     dist_3    56.1
#     dtype: float64

# ##### Operaciones con Series

# In[24]:

mi_serie[mi_serie > 4]


# Out[24]:

#     dist_2    56.3
#     dist_3    56.1
#     dtype: float64

# In[25]:

mi_serie * 2


# Out[25]:

#     dist_1      6.8
#     dist_2    112.6
#     dist_3    112.2
#     dtype: float64

# In[26]:

np.sqrt(mi_serie)


# Out[26]:

#     dist_1    1.843909
#     dist_2    7.503333
#     dist_3    7.489993
#     dtype: float64

# In[27]:

pd.notnull(mi_serie)


# Out[27]:

#     dist_1    True
#     dist_2    True
#     dist_3    True
#     dtype: bool

# In[28]:

pd.isnull(mi_serie)


# Out[28]:

#     dist_1    False
#     dist_2    False
#     dist_3    False
#     dtype: bool

# #### Series Temporales

# In[84]:

dates_complete = pd.date_range('1/18/2013', '02/09/2014', freq='15T')
other_dates = pd.date_range('1/18/2013', '02/09/2014', freq='1D')
print dates_complete
print other_dates
mi_serie = pd.Series(other_dates)
mi_serie_med = pd.Series(dates_complete)


# Out[84]:

#     <class 'pandas.tseries.index.DatetimeIndex'>
#     [2013-01-18 00:00:00, ..., 2014-02-09 00:00:00]
#     Length: 37153, Freq: 15T, Timezone: None
#     <class 'pandas.tseries.index.DatetimeIndex'>
#     [2013-01-18 00:00:00, ..., 2014-02-09 00:00:00]
#     Length: 388, Freq: D, Timezone: None
# 

# #### DataFrames

# In[30]:

type(df_excel)


# Out[30]:

#     pandas.core.frame.DataFrame

# In[31]:

df_other_excel


# Out[31]:

#        CODE (ROOT) SEX  1.EDAD  Indice cintura/estatura        BMI  MELANIN  \
#     0      ZBR0001   m      32                 0.556313  27.099205   32.780   
#     1      ZBR0003   m      42                 0.544450  26.968685   31.665   
#     2      ZBR0004   f      20                 0.404567  18.344819   24.050   
#     3      ZBR0005   m      24                 0.524217  26.271270   37.605   
#     4      ZBR0007   f      21                 0.400243  19.979754   38.750   
#     5      ZBR0008   f      22                 0.514921  23.421517   45.625   
#     6      ZBR0009   f      22                 0.516560  24.174154   47.625   
#     7      ZBR0010   f      21                 0.456384  22.303270   27.275   
#     8      ZBR0011   f      23                 0.525704  23.221356   31.915   
#     9      ZBR0012   f      21                 0.452612  19.931230   30.040   
#     10     ZBR0013   m      26                 0.566006  28.505164   37.720   
#     11     ZBR0014   m      25                 0.457968  21.855316   32.885   
#     12     ZBR0015   f      21                 0.479896  24.266496   29.910   
#     13     ZBR0016   f      21                 0.458384  20.000330   34.735   
#     14     ZBR0017   f      21                 0.523349  23.980853   31.755   
#     15     ZBR0018   f      19                 0.423264  19.962426   29.885   
#     16     ZBR0019   m      20                 0.470496  22.551112   28.615   
#     17     ZBR0020   m      20                 0.432537  20.101116   32.285   
#     18     ZBR0023   m      21                 0.490803  24.039640   33.720   
#     19     ZBR0024   m      18                 0.473049  23.077207   33.660   
#     20     ZBR0025   m      19                 0.425974  20.356107   28.100   
#     21     ZBR0027   f      18                 0.456566  22.188490   28.920   
#     22     ZBR0028   f      21                 0.492677  23.539280   38.355   
#     23     ZBR0031   f      20                 0.516762  24.628922   29.260   
#     24     ZBR0034   f      18                 0.472617  25.048006   32.660   
#     25     ZBR0035   m      21                 0.459795  19.855726   29.715   
#     26     ZBR0038   m      26                 0.463520  21.244715   37.855   
#     27     ZBR0040   f      22                 0.545339  27.101699   31.645   
#     28     ZBR0041   m      23                 0.482438  24.946913   38.185   
#     29     ZBR0042   m      24                 0.526109  31.132161   29.830   
#     30     ZBR0043   f      24                 0.391975  19.147234   27.955   
#     31     ZBR0044   f      50                 0.516327  23.289242   28.345   
#     32     ZBR0045   f      23                 0.417000  19.842533   32.095   
#     33     ZBR0046   f      23                 0.401844  20.631610   27.320   
#     34     ZBR0047   m      22                 0.439767  22.669892   31.445   
#     35     ZBR0048   m      35                 0.497055  25.613866   35.480   
#     36     ZBR0049   f      23                 0.425086  20.976813   30.825   
#     37     ZBR0050   f      43                 0.635127  34.629867   29.255   
#     38     ZBR0051   f      22                 0.484664  27.997471   31.695   
#     39     ZBR0052   f      51                 0.546597  32.178503   29.805   
#     40     ZBR0053   f      24                 0.499839  23.888441   34.740   
#     41     ZBR0054   m      29                 0.497644  23.688924   26.770   
#     42     ZBR0055   f      21                 0.449292  23.327641   30.475   
#     43     ZBR0056   f      48                 0.565859  29.219373   33.510   
#     44     ZBR0057   f      52                 0.561085  23.971775   28.220   
#     45     ZBR0058   f      27                 0.458548  24.345599   35.120   
#     46     ZBR0059   f      36                 0.547420  33.345521   31.210   
#     47     ZBR0060   m      19                 0.491430  26.589863   30.250   
#     48     ZBR0061   f      30                 0.574587  32.820844   33.930   
#     49     ZBR0062   m      56                 0.644147  32.699148   34.095   
#     50     ZBR0063   m      32                 0.443945  22.074008   33.325   
#     51     ZBR0066   m      83                 0.516636  23.129773   31.150   
#     52     ZBR0067   f      27                 0.395880  19.143417   27.760   
#     53     ZBR0068   m      43                 0.559726  25.626807   30.115   
#     54     ZBR0069   f      26                 0.393462  20.263061   30.045   
#     55     ZBR0070   m      29                 0.368655  16.466573   29.210   
#     56     ZBR0071   f      24                 0.406995  19.292369   34.925   
#     57     ZBR0072   f      33                 0.424469  22.093170   31.755   
#     58     ZBR0073   f      31                 0.431034  21.171885   27.510   
#     59     ZBR0074   f      25                 0.473131  21.233717   35.390   
#                ... ...     ...                      ...        ...      ...   
#     
#                EYE COLOR                BALDING              HAIR COLOR  \
#     0   dark brown/black      mild vertex balD.             brown/black   
#     1              green           no hair loss             brown/black   
#     2          blue/grey           no hair loss                   blond   
#     3              green           no hair loss  dark blond/light brown   
#     4   dark brown/black           no hair loss             brown/black   
#     5   dark brown/black           no hair loss             brown/black   
#     6          blue/grey           no hair loss  dark blond/light brown   
#     7        light brown           no hair loss  dark blond/light brown   
#     8              green           no hair loss             brown/black   
#     9        light brown           no hair loss             brown/black   
#     10  dark brown/black           no hair loss             brown/black   
#     11             green           no hair loss  dark blond/light brown   
#     12         blue/grey           no hair loss  dark blond/light brown   
#     13         blue/grey           no hair loss  dark blond/light brown   
#     14  dark brown/black           no hair loss             brown/black   
#     15  dark brown/black           no hair loss             brown/black   
#     16       light brown           no hair loss  dark blond/light brown   
#     17  dark brown/black           no hair loss             brown/black   
#     18  dark brown/black           no hair loss             brown/black   
#     19  dark brown/black          frontal bald.             brown/black   
#     20       light brown           no hair loss  dark blond/light brown   
#     21             green           no hair loss                   blond   
#     22  dark brown/black           no hair loss             brown/black   
#     23  dark brown/black           no hair loss  dark blond/light brown   
#     24  dark brown/black           no hair loss             brown/black   
#     25       light brown           no hair loss  dark blond/light brown   
#     26             green           no hair loss  dark blond/light brown   
#     27  dark brown/black           no hair loss             brown/black   
#     28  dark brown/black           no hair loss             brown/black   
#     29             green           no hair loss             brown/black   
#     30             honey           no hair loss  dark blond/light brown   
#     31  dark brown/black           no hair loss             brown/black   
#     32  dark brown/black           no hair loss  dark blond/light brown   
#     33             honey           no hair loss  dark blond/light brown   
#     34  dark brown/black           no hair loss             brown/black   
#     35             honey           no hair loss             brown/black   
#     36       light brown           no hair loss  dark blond/light brown   
#     37  dark brown/black           no hair loss             brown/black   
#     38  dark brown/black           no hair loss             brown/black   
#     39  dark brown/black           no hair loss  dark blond/light brown   
#     40  dark brown/black           no hair loss             brown/black   
#     41  dark brown/black           no hair loss             brown/black   
#     42             green           no hair loss             brown/black   
#     43  dark brown/black           no hair loss             brown/black   
#     44             green           no hair loss             brown/black   
#     45  dark brown/black           no hair loss             brown/black   
#     46             green           no hair loss  dark blond/light brown   
#     47             honey           no hair loss             brown/black   
#     48  dark brown/black           no hair loss  dark blond/light brown   
#     49             green           no hair loss             brown/black   
#     50  dark brown/black           no hair loss             brown/black   
#     51         blue/grey  moderate vertex bald.  dark blond/light brown   
#     52             honey           no hair loss  dark blond/light brown   
#     53  dark brown/black      mild vertex balD.             brown/black   
#     54  dark brown/black           no hair loss  dark blond/light brown   
#     55  dark brown/black          frontal bald.             brown/black   
#     56  dark brown/black           no hair loss             brown/black   
#     57  dark brown/black           no hair loss             brown/black   
#     58       light brown          frontal bald.  dark blond/light brown   
#     59       light brown           no hair loss             brown/black   
#                      ...                    ...                     ...   
#     
#                   GREYING HAIR SHAPE     3. EDUC  6.1 TV  6.2 RADIO  6.3 BAÑO  \
#     0   predom.no-greying   straight     Tecnol.       3          2         2   
#     1   predom.no-greying       wavy  Secundaria       3          2         2   
#     2          no greying   straight  Secundaria       1          1         2   
#     3          no greying      curly  Secundaria       1          1         2   
#     4          no greying       wavy       Univ.       1          0         1   
#     5          no greying      curly  Secundaria       1          2         2   
#     6          no greying      curly  Secundaria       1          0         2   
#     7          no greying   straight  Secundaria       1          0         1   
#     8          no greying   straight     Tecnol.       2          1         1   
#     9          no greying   straight  Secundaria       2          1         1   
#     10         no greying      curly  Secundaria       3          1         2   
#     11         no greying      curly  Secundaria       2          1         2   
#     12         no greying       wavy  Secundaria       3          2         1   
#     13         no greying       wavy  Secundaria       1          1         1   
#     14         no greying   straight       Univ.       3          1         3   
#     15         no greying   straight  Secundaria       1          1         1   
#     16         no greying       wavy  Secundaria       1          1         1   
#     17         no greying       wavy  Secundaria       2          1         1   
#     18         no greying   straight  Secundaria       1          0         1   
#     19         no greying      curly  Secundaria       1          1         1   
#     20         no greying       wavy  Secundaria       1          0         1   
#     21         no greying       wavy  Secundaria       1          1         1   
#     22         no greying      curly  Secundaria       2          2         3   
#     23         no greying   straight  Secundaria       2          1         2   
#     24         no greying       wavy  Secundaria       2          2         2   
#     25         no greying   straight  Secundaria       5          2         3   
#     26         no greying      curly     Tecnol.       4          3         3   
#     27         no greying       wavy       Univ.       2          1         2   
#     28         no greying       wavy       Univ.       2          0         3   
#     29         no greying   straight  Secundaria       5          3         4   
#     30         no greying       wavy  Secundaria       1          1         2   
#     31         no greying       wavy  Secundaria       2          2         2   
#     32         no greying   straight       Univ.       1          1         1   
#     33         no greying   straight  Secundaria       2          1         2   
#     34         no greying   straight       Univ.       0          0         1   
#     35         no greying       wavy       Univ.       1          1         1   
#     36         no greying   straight       Univ.       1          1         1   
#     37         no greying       wavy   Postgrado       3          2         2   
#     38         no greying       wavy  Secundaria       1          1         3   
#     39  predom.no-greying       wavy       Univ.       2          1         1   
#     40         no greying   straight       Univ.       2          2         2   
#     41  predom.no-greying       wavy  Secundaria       3          1         2   
#     42         no greying   straight  Secundaria       3          2         2   
#     43         no greying       wavy       Univ.       1          1         1   
#     44  predom.no-greying      curly   Postgrado       4          3         3   
#     45         no greying   straight  Secundaria       2          1         2   
#     46         no greying       wavy   Postgrado       2          0         2   
#     47         no greying       wavy  Secundaria       2          1         3   
#     48         no greying   straight   Postgrado       0          2         0   
#     49         50%greying       wavy   Postgrado       4          2         4   
#     50  predom.no-greying   straight   Postgrado       1          1         1   
#     51     predom.greying       wavy   Postgrado       1          1         1   
#     52         no greying      curly   Postgrado       4          4         3   
#     53         50%greying   straight   Postgrado       1          3         1   
#     54         no greying   straight       Univ.       1          1         1   
#     55         no greying   straight   Postgrado       2          0         1   
#     56         no greying       wavy  Secundaria       2          4         3   
#     57         no greying       wavy   Postgrado       4          3         1   
#     58         no greying       wavy   Postgrado       1          1         1   
#     59         no greying       wavy   Postgrado       3          1         4   
#                       ...        ...         ...     ...        ...       ...   
#     
#         6.4 AUTO  6.5 EMP.DOM.  6.6 ASP.  6.7 LAV.  6.8 VIDEO      
#     0          1             1         1         1          2 ...  
#     1          1             0         1         1          2 ...  
#     2          0             0         1         0          1 ...  
#     3          0             0         0         0          0 ...  
#     4          0             0         0         0          0 ...  
#     5          0             0         0         1          1 ...  
#     6          0             0         0         1          1 ...  
#     7          0             0         0         1          1 ...  
#     8          0             0         0         1          1 ...  
#     9          0             0         0         1          0 ...  
#     10         1             0         0         1          1 ...  
#     11         1             1         0         1          1 ...  
#     12         0             0         0         1          1 ...  
#     13         1             0         0         1          1 ...  
#     14         1             0         1         1          2 ...  
#     15         0             0         1         1          1 ...  
#     16         0             0         0         1          0 ...  
#     17         0             0         0         0          1 ...  
#     18         0             0         0         0          0 ...  
#     19         0             0         0         0          0 ...  
#     20         1             0         0         0          1 ...  
#     21         0             0         0         0          1 ...  
#     22         0             0         0         2          2 ...  
#     23         1             0         0         1          1 ...  
#     24         0             0         0         1          1 ...  
#     25         1             0         1         1          3 ...  
#     26         1             0         0         1          2 ...  
#     27         1             0         0         1          1 ...  
#     28         2             1         1         1          1 ...  
#     29         1             0         1         1          2 ...  
#     30         1             0         1         1          1 ...  
#     31         2             0         1         1          1 ...  
#     32         0             0         1         1          1 ...  
#     33         1             1         2         1          1 ...  
#     34         0             0         0         0          0 ...  
#     35         1             0         0         1          2 ...  
#     36         0             0         0         1          1 ...  
#     37         1             1         1         1          2 ...  
#     38         0             0         1         1          0 ...  
#     39         1             0         1         1          2 ...  
#     40         0             0         1         1          0 ...  
#     41         0             0         1         1          1 ...  
#     42         1             0         1         1          2 ...  
#     43         1             0         0         1          0 ...  
#     44         2             0         1         2          2 ...  
#     45         0             0         1         1          1 ...  
#     46         1             1         1         1          1 ...  
#     47         2             1         1         2          1 ...  
#     48         1             0         0         0          0 ...  
#     49         2             1         2         1          3 ...  
#     50         0             0         0         1          1 ...  
#     51         1             0         1         1          1 ...  
#     52         1             1         1         1          2 ...  
#     53         1             1         1         1          1 ...  
#     54         0             0         0         0          0 ...  
#     55         0             0         0         0          0 ...  
#     56         1             1         1         1          1 ...  
#     57         1             0         1         1          2 ...  
#     58         0             0         1         1          1 ...  
#     59         1             1         0         1          1 ...  
#              ...           ...       ...       ...        ...      
#     
#     [1240 rows x 30 columns]

# In[32]:

df_other_excel[['6.8 VIDEO', 'EYE COLOR']]


# Out[32]:

#         6.8 VIDEO         EYE COLOR
#     0           2  dark brown/black
#     1           2             green
#     2           1         blue/grey
#     3           0             green
#     4           0  dark brown/black
#     5           1  dark brown/black
#     6           1         blue/grey
#     7           1       light brown
#     8           1             green
#     9           0       light brown
#     10          1  dark brown/black
#     11          1             green
#     12          1         blue/grey
#     13          1         blue/grey
#     14          2  dark brown/black
#     15          1  dark brown/black
#     16          0       light brown
#     17          1  dark brown/black
#     18          0  dark brown/black
#     19          0  dark brown/black
#     20          1       light brown
#     21          1             green
#     22          2  dark brown/black
#     23          1  dark brown/black
#     24          1  dark brown/black
#     25          3       light brown
#     26          2             green
#     27          1  dark brown/black
#     28          1  dark brown/black
#     29          2             green
#     30          1             honey
#     31          1  dark brown/black
#     32          1  dark brown/black
#     33          1             honey
#     34          0  dark brown/black
#     35          2             honey
#     36          1       light brown
#     37          2  dark brown/black
#     38          0  dark brown/black
#     39          2  dark brown/black
#     40          0  dark brown/black
#     41          1  dark brown/black
#     42          2             green
#     43          0  dark brown/black
#     44          2             green
#     45          1  dark brown/black
#     46          1             green
#     47          1             honey
#     48          0  dark brown/black
#     49          3             green
#     50          1  dark brown/black
#     51          1         blue/grey
#     52          2             honey
#     53          1  dark brown/black
#     54          0  dark brown/black
#     55          0  dark brown/black
#     56          1  dark brown/black
#     57          2  dark brown/black
#     58          1       light brown
#     59          1       light brown
#               ...               ...
#     
#     [1240 rows x 2 columns]

# In[33]:

print df_txt.columns
df_txt.columns = ['medidor', 'date', 'value']
print df_txt.columns
df_txt
df_txt['medidor'].drop_duplicates()


# Out[33]:

#     Int64Index([0, 1, 2], dtype='int64')
#     Index([u'medidor', u'date', u'value'], dtype='object')
# 

#     0       8
#     1      15
#     2      16
#     3      17
#     4      18
#     5      20
#     6       6
#     7       5
#     9       7
#     11      9
#     12     10
#     13     13
#     14     14
#     773    19
#     775    21
#     776    22
#     795    23
#     796    24
#     834    11
#     835    12
#     Name: medidor, dtype: int64

# In[66]:

df_txt.ix[:4, :3] 


# Out[66]:

#        medidor                date  value
#     0        8 2013-11-28 11:00:00      0
#     1       15 2013-11-28 11:00:00    692
#     2       16 2013-11-28 11:00:00    367
#     3       17 2013-11-28 11:00:00      0
#     4       18 2013-11-28 11:00:00      0
#     
#     [5 rows x 3 columns]

# In[35]:

df_txt['nueva_col'] = np.arange(len(df_txt['medidor']))
df_txt


# Out[35]:

#         medidor                date  value  nueva_col
#     0         8 2013-11-28 11:00:00      0          0
#     1        15 2013-11-28 11:00:00    692          1
#     2        16 2013-11-28 11:00:00    367          2
#     3        17 2013-11-28 11:00:00      0          3
#     4        18 2013-11-28 11:00:00      0          4
#     5        20 2013-12-01 09:30:00     71          5
#     6         6 2013-12-05 15:45:00      0          6
#     7         5 2013-11-18 22:15:00  29705          7
#     8         6 2013-11-18 22:15:00  15364          8
#     9         7 2013-11-18 22:15:00  41482          9
#     10        8 2013-11-18 22:15:00  52487         10
#     11        9 2013-11-18 22:15:00      0         11
#     12       10 2013-11-18 22:15:00      0         12
#     13       13 2013-11-18 22:15:00  22792         13
#     14       14 2013-11-18 22:15:00  18182         14
#     15       15 2013-11-18 22:15:00      0         15
#     16       16 2013-11-18 22:15:00      0         16
#     17       17 2013-11-18 22:15:00  22273         17
#     18       18 2013-11-18 22:15:00  31488         18
#     19        7 2013-11-18 22:30:00  64266         19
#     20        8 2013-11-18 22:30:00  41479         20
#     21        9 2013-11-18 22:30:00      0         21
#     22       10 2013-11-18 22:30:00      0         22
#     23       13 2013-11-18 22:30:00  14344         23
#     24       14 2013-11-18 22:30:00  11270         24
#     25       15 2013-11-18 22:30:00      0         25
#     26       16 2013-11-18 22:30:00      0         26
#     27       17 2013-11-18 22:30:00  20481         27
#     28       18 2013-11-18 22:30:00  29696         28
#     29        5 2013-11-18 22:30:00  24585         29
#     30        6 2013-11-18 22:30:00  15364         30
#     31        7 2013-11-18 22:45:00  60170         31
#     32        8 2013-11-18 22:45:00  42247         32
#     33        9 2013-11-18 22:45:00      0         33
#     34       10 2013-11-18 22:45:00      0         34
#     35       13 2013-11-18 22:45:00  10248         35
#     36       14 2013-11-18 22:45:00  12806         36
#     37       15 2013-11-18 22:45:00      0         37
#     38       16 2013-11-18 22:45:00      0         38
#     39       17 2013-11-18 22:45:00  17921         39
#     40       18 2013-11-18 22:45:00  28416         40
#     41        5 2013-11-18 22:45:00  19977         41
#     42        6 2013-11-18 22:45:00  18692         42
#     43        9 2013-11-18 23:00:00      0         43
#     44       10 2013-11-18 23:00:00      0         44
#     45       13 2013-11-18 23:00:00  57351         45
#     46       14 2013-11-18 23:00:00  61957         46
#     47       15 2013-11-18 23:00:00      0         47
#     48       16 2013-11-18 23:00:00      0         48
#     49       17 2013-11-18 23:00:00  14849         49
#     50       18 2013-11-18 23:00:00  29440         50
#     51        5 2013-11-18 23:00:00    777         51
#     52        6 2013-11-18 23:00:00   8708         52
#     53        7 2013-11-18 23:00:00  34314         53
#     54        8 2013-11-18 23:00:00  18695         54
#     55        9 2013-11-18 23:15:00      0         55
#     56       10 2013-11-18 23:15:00      0         56
#     57       13 2013-11-18 23:15:00  39687         57
#     58       14 2013-11-18 23:15:00  48389         58
#     59       15 2013-11-18 23:15:00      0         59
#             ...                 ...    ...        ...
#     
#     [129721 rows x 4 columns]

# In[36]:

df_txt.T


# Out[36]:

#                                 0                    1                    2   \
#     medidor                      8                   15                   16   
#     date       2013-11-28 11:00:00  2013-11-28 11:00:00  2013-11-28 11:00:00   
#     value                        0                  692                  367   
#     nueva_col                    0                    1                    2   
#     
#                                 3                    4                    5   \
#     medidor                     17                   18                   20   
#     date       2013-11-28 11:00:00  2013-11-28 11:00:00  2013-12-01 09:30:00   
#     value                        0                    0                   71   
#     nueva_col                    3                    4                    5   
#     
#                                 6                    7                    8   \
#     medidor                      6                    5                    6   
#     date       2013-12-05 15:45:00  2013-11-18 22:15:00  2013-11-18 22:15:00   
#     value                        0                29705                15364   
#     nueva_col                    6                    7                    8   
#     
#                                 9                    10                   11  \
#     medidor                      7                    8                    9   
#     date       2013-11-18 22:15:00  2013-11-18 22:15:00  2013-11-18 22:15:00   
#     value                    41482                52487                    0   
#     nueva_col                    9                   10                   11   
#     
#                                 12                   13                   14  \
#     medidor                     10                   13                   14   
#     date       2013-11-18 22:15:00  2013-11-18 22:15:00  2013-11-18 22:15:00   
#     value                        0                22792                18182   
#     nueva_col                   12                   13                   14   
#     
#                                 15                   16                   17  \
#     medidor                     15                   16                   17   
#     date       2013-11-18 22:15:00  2013-11-18 22:15:00  2013-11-18 22:15:00   
#     value                        0                    0                22273   
#     nueva_col                   15                   16                   17   
#     
#                                 18                   19      
#     medidor                     18                    7 ...  
#     date       2013-11-18 22:15:00  2013-11-18 22:30:00 ...  
#     value                    31488                64266 ...  
#     nueva_col                   18                   19 ...  
#     
#     [4 rows x 129721 columns]

# In[37]:

df_txt.values


# Out[37]:

#     array([[8, Timestamp('2013-11-28 11:00:00', tz=None), 0, 0],
#            [15, Timestamp('2013-11-28 11:00:00', tz=None), 692, 1],
#            [16, Timestamp('2013-11-28 11:00:00', tz=None), 367, 2],
#            ..., 
#            [12, Timestamp('2014-02-09 12:30:00', tz=None), 0, 129718],
#            [23, Timestamp('2014-02-09 12:45:00', tz=None), 338, 129719],
#            [24, Timestamp('2014-02-09 12:45:00', tz=None), 227, 129720]], dtype=object)

# In[38]:

df_txt.reindex(columns=['medidor', 'date', 'value'])


# Out[38]:

#         medidor                date  value
#     0         8 2013-11-28 11:00:00      0
#     1        15 2013-11-28 11:00:00    692
#     2        16 2013-11-28 11:00:00    367
#     3        17 2013-11-28 11:00:00      0
#     4        18 2013-11-28 11:00:00      0
#     5        20 2013-12-01 09:30:00     71
#     6         6 2013-12-05 15:45:00      0
#     7         5 2013-11-18 22:15:00  29705
#     8         6 2013-11-18 22:15:00  15364
#     9         7 2013-11-18 22:15:00  41482
#     10        8 2013-11-18 22:15:00  52487
#     11        9 2013-11-18 22:15:00      0
#     12       10 2013-11-18 22:15:00      0
#     13       13 2013-11-18 22:15:00  22792
#     14       14 2013-11-18 22:15:00  18182
#     15       15 2013-11-18 22:15:00      0
#     16       16 2013-11-18 22:15:00      0
#     17       17 2013-11-18 22:15:00  22273
#     18       18 2013-11-18 22:15:00  31488
#     19        7 2013-11-18 22:30:00  64266
#     20        8 2013-11-18 22:30:00  41479
#     21        9 2013-11-18 22:30:00      0
#     22       10 2013-11-18 22:30:00      0
#     23       13 2013-11-18 22:30:00  14344
#     24       14 2013-11-18 22:30:00  11270
#     25       15 2013-11-18 22:30:00      0
#     26       16 2013-11-18 22:30:00      0
#     27       17 2013-11-18 22:30:00  20481
#     28       18 2013-11-18 22:30:00  29696
#     29        5 2013-11-18 22:30:00  24585
#     30        6 2013-11-18 22:30:00  15364
#     31        7 2013-11-18 22:45:00  60170
#     32        8 2013-11-18 22:45:00  42247
#     33        9 2013-11-18 22:45:00      0
#     34       10 2013-11-18 22:45:00      0
#     35       13 2013-11-18 22:45:00  10248
#     36       14 2013-11-18 22:45:00  12806
#     37       15 2013-11-18 22:45:00      0
#     38       16 2013-11-18 22:45:00      0
#     39       17 2013-11-18 22:45:00  17921
#     40       18 2013-11-18 22:45:00  28416
#     41        5 2013-11-18 22:45:00  19977
#     42        6 2013-11-18 22:45:00  18692
#     43        9 2013-11-18 23:00:00      0
#     44       10 2013-11-18 23:00:00      0
#     45       13 2013-11-18 23:00:00  57351
#     46       14 2013-11-18 23:00:00  61957
#     47       15 2013-11-18 23:00:00      0
#     48       16 2013-11-18 23:00:00      0
#     49       17 2013-11-18 23:00:00  14849
#     50       18 2013-11-18 23:00:00  29440
#     51        5 2013-11-18 23:00:00    777
#     52        6 2013-11-18 23:00:00   8708
#     53        7 2013-11-18 23:00:00  34314
#     54        8 2013-11-18 23:00:00  18695
#     55        9 2013-11-18 23:15:00      0
#     56       10 2013-11-18 23:15:00      0
#     57       13 2013-11-18 23:15:00  39687
#     58       14 2013-11-18 23:15:00  48389
#     59       15 2013-11-18 23:15:00      0
#             ...                 ...    ...
#     
#     [129721 rows x 3 columns]

# In[39]:

df_txt.drop([0, 1])


# Out[39]:

#         medidor                date  value  nueva_col
#     2        16 2013-11-28 11:00:00    367          2
#     3        17 2013-11-28 11:00:00      0          3
#     4        18 2013-11-28 11:00:00      0          4
#     5        20 2013-12-01 09:30:00     71          5
#     6         6 2013-12-05 15:45:00      0          6
#     7         5 2013-11-18 22:15:00  29705          7
#     8         6 2013-11-18 22:15:00  15364          8
#     9         7 2013-11-18 22:15:00  41482          9
#     10        8 2013-11-18 22:15:00  52487         10
#     11        9 2013-11-18 22:15:00      0         11
#     12       10 2013-11-18 22:15:00      0         12
#     13       13 2013-11-18 22:15:00  22792         13
#     14       14 2013-11-18 22:15:00  18182         14
#     15       15 2013-11-18 22:15:00      0         15
#     16       16 2013-11-18 22:15:00      0         16
#     17       17 2013-11-18 22:15:00  22273         17
#     18       18 2013-11-18 22:15:00  31488         18
#     19        7 2013-11-18 22:30:00  64266         19
#     20        8 2013-11-18 22:30:00  41479         20
#     21        9 2013-11-18 22:30:00      0         21
#     22       10 2013-11-18 22:30:00      0         22
#     23       13 2013-11-18 22:30:00  14344         23
#     24       14 2013-11-18 22:30:00  11270         24
#     25       15 2013-11-18 22:30:00      0         25
#     26       16 2013-11-18 22:30:00      0         26
#     27       17 2013-11-18 22:30:00  20481         27
#     28       18 2013-11-18 22:30:00  29696         28
#     29        5 2013-11-18 22:30:00  24585         29
#     30        6 2013-11-18 22:30:00  15364         30
#     31        7 2013-11-18 22:45:00  60170         31
#     32        8 2013-11-18 22:45:00  42247         32
#     33        9 2013-11-18 22:45:00      0         33
#     34       10 2013-11-18 22:45:00      0         34
#     35       13 2013-11-18 22:45:00  10248         35
#     36       14 2013-11-18 22:45:00  12806         36
#     37       15 2013-11-18 22:45:00      0         37
#     38       16 2013-11-18 22:45:00      0         38
#     39       17 2013-11-18 22:45:00  17921         39
#     40       18 2013-11-18 22:45:00  28416         40
#     41        5 2013-11-18 22:45:00  19977         41
#     42        6 2013-11-18 22:45:00  18692         42
#     43        9 2013-11-18 23:00:00      0         43
#     44       10 2013-11-18 23:00:00      0         44
#     45       13 2013-11-18 23:00:00  57351         45
#     46       14 2013-11-18 23:00:00  61957         46
#     47       15 2013-11-18 23:00:00      0         47
#     48       16 2013-11-18 23:00:00      0         48
#     49       17 2013-11-18 23:00:00  14849         49
#     50       18 2013-11-18 23:00:00  29440         50
#     51        5 2013-11-18 23:00:00    777         51
#     52        6 2013-11-18 23:00:00   8708         52
#     53        7 2013-11-18 23:00:00  34314         53
#     54        8 2013-11-18 23:00:00  18695         54
#     55        9 2013-11-18 23:15:00      0         55
#     56       10 2013-11-18 23:15:00      0         56
#     57       13 2013-11-18 23:15:00  39687         57
#     58       14 2013-11-18 23:15:00  48389         58
#     59       15 2013-11-18 23:15:00      0         59
#     60       16 2013-11-18 23:15:00      0         60
#     61       17 2013-11-18 23:15:00  13057         61
#             ...                 ...    ...        ...
#     
#     [129719 rows x 4 columns]

# In[40]:

df_txt.drop(['value'], axis=1)


# Out[40]:

#         medidor                date  nueva_col
#     0         8 2013-11-28 11:00:00          0
#     1        15 2013-11-28 11:00:00          1
#     2        16 2013-11-28 11:00:00          2
#     3        17 2013-11-28 11:00:00          3
#     4        18 2013-11-28 11:00:00          4
#     5        20 2013-12-01 09:30:00          5
#     6         6 2013-12-05 15:45:00          6
#     7         5 2013-11-18 22:15:00          7
#     8         6 2013-11-18 22:15:00          8
#     9         7 2013-11-18 22:15:00          9
#     10        8 2013-11-18 22:15:00         10
#     11        9 2013-11-18 22:15:00         11
#     12       10 2013-11-18 22:15:00         12
#     13       13 2013-11-18 22:15:00         13
#     14       14 2013-11-18 22:15:00         14
#     15       15 2013-11-18 22:15:00         15
#     16       16 2013-11-18 22:15:00         16
#     17       17 2013-11-18 22:15:00         17
#     18       18 2013-11-18 22:15:00         18
#     19        7 2013-11-18 22:30:00         19
#     20        8 2013-11-18 22:30:00         20
#     21        9 2013-11-18 22:30:00         21
#     22       10 2013-11-18 22:30:00         22
#     23       13 2013-11-18 22:30:00         23
#     24       14 2013-11-18 22:30:00         24
#     25       15 2013-11-18 22:30:00         25
#     26       16 2013-11-18 22:30:00         26
#     27       17 2013-11-18 22:30:00         27
#     28       18 2013-11-18 22:30:00         28
#     29        5 2013-11-18 22:30:00         29
#     30        6 2013-11-18 22:30:00         30
#     31        7 2013-11-18 22:45:00         31
#     32        8 2013-11-18 22:45:00         32
#     33        9 2013-11-18 22:45:00         33
#     34       10 2013-11-18 22:45:00         34
#     35       13 2013-11-18 22:45:00         35
#     36       14 2013-11-18 22:45:00         36
#     37       15 2013-11-18 22:45:00         37
#     38       16 2013-11-18 22:45:00         38
#     39       17 2013-11-18 22:45:00         39
#     40       18 2013-11-18 22:45:00         40
#     41        5 2013-11-18 22:45:00         41
#     42        6 2013-11-18 22:45:00         42
#     43        9 2013-11-18 23:00:00         43
#     44       10 2013-11-18 23:00:00         44
#     45       13 2013-11-18 23:00:00         45
#     46       14 2013-11-18 23:00:00         46
#     47       15 2013-11-18 23:00:00         47
#     48       16 2013-11-18 23:00:00         48
#     49       17 2013-11-18 23:00:00         49
#     50       18 2013-11-18 23:00:00         50
#     51        5 2013-11-18 23:00:00         51
#     52        6 2013-11-18 23:00:00         52
#     53        7 2013-11-18 23:00:00         53
#     54        8 2013-11-18 23:00:00         54
#     55        9 2013-11-18 23:15:00         55
#     56       10 2013-11-18 23:15:00         56
#     57       13 2013-11-18 23:15:00         57
#     58       14 2013-11-18 23:15:00         58
#     59       15 2013-11-18 23:15:00         59
#             ...                 ...        ...
#     
#     [129721 rows x 3 columns]

# In[41]:

df_txt


# Out[41]:

#         medidor                date  value  nueva_col
#     0         8 2013-11-28 11:00:00      0          0
#     1        15 2013-11-28 11:00:00    692          1
#     2        16 2013-11-28 11:00:00    367          2
#     3        17 2013-11-28 11:00:00      0          3
#     4        18 2013-11-28 11:00:00      0          4
#     5        20 2013-12-01 09:30:00     71          5
#     6         6 2013-12-05 15:45:00      0          6
#     7         5 2013-11-18 22:15:00  29705          7
#     8         6 2013-11-18 22:15:00  15364          8
#     9         7 2013-11-18 22:15:00  41482          9
#     10        8 2013-11-18 22:15:00  52487         10
#     11        9 2013-11-18 22:15:00      0         11
#     12       10 2013-11-18 22:15:00      0         12
#     13       13 2013-11-18 22:15:00  22792         13
#     14       14 2013-11-18 22:15:00  18182         14
#     15       15 2013-11-18 22:15:00      0         15
#     16       16 2013-11-18 22:15:00      0         16
#     17       17 2013-11-18 22:15:00  22273         17
#     18       18 2013-11-18 22:15:00  31488         18
#     19        7 2013-11-18 22:30:00  64266         19
#     20        8 2013-11-18 22:30:00  41479         20
#     21        9 2013-11-18 22:30:00      0         21
#     22       10 2013-11-18 22:30:00      0         22
#     23       13 2013-11-18 22:30:00  14344         23
#     24       14 2013-11-18 22:30:00  11270         24
#     25       15 2013-11-18 22:30:00      0         25
#     26       16 2013-11-18 22:30:00      0         26
#     27       17 2013-11-18 22:30:00  20481         27
#     28       18 2013-11-18 22:30:00  29696         28
#     29        5 2013-11-18 22:30:00  24585         29
#     30        6 2013-11-18 22:30:00  15364         30
#     31        7 2013-11-18 22:45:00  60170         31
#     32        8 2013-11-18 22:45:00  42247         32
#     33        9 2013-11-18 22:45:00      0         33
#     34       10 2013-11-18 22:45:00      0         34
#     35       13 2013-11-18 22:45:00  10248         35
#     36       14 2013-11-18 22:45:00  12806         36
#     37       15 2013-11-18 22:45:00      0         37
#     38       16 2013-11-18 22:45:00      0         38
#     39       17 2013-11-18 22:45:00  17921         39
#     40       18 2013-11-18 22:45:00  28416         40
#     41        5 2013-11-18 22:45:00  19977         41
#     42        6 2013-11-18 22:45:00  18692         42
#     43        9 2013-11-18 23:00:00      0         43
#     44       10 2013-11-18 23:00:00      0         44
#     45       13 2013-11-18 23:00:00  57351         45
#     46       14 2013-11-18 23:00:00  61957         46
#     47       15 2013-11-18 23:00:00      0         47
#     48       16 2013-11-18 23:00:00      0         48
#     49       17 2013-11-18 23:00:00  14849         49
#     50       18 2013-11-18 23:00:00  29440         50
#     51        5 2013-11-18 23:00:00    777         51
#     52        6 2013-11-18 23:00:00   8708         52
#     53        7 2013-11-18 23:00:00  34314         53
#     54        8 2013-11-18 23:00:00  18695         54
#     55        9 2013-11-18 23:15:00      0         55
#     56       10 2013-11-18 23:15:00      0         56
#     57       13 2013-11-18 23:15:00  39687         57
#     58       14 2013-11-18 23:15:00  48389         58
#     59       15 2013-11-18 23:15:00      0         59
#             ...                 ...    ...        ...
#     
#     [129721 rows x 4 columns]

# In[42]:

df_other_excel['1.EDAD'] + df_txt['medidor']


# Out[42]:

#     0     40
#     1     57
#     2     36
#     3     41
#     4     39
#     5     42
#     6     28
#     7     26
#     8     29
#     9     28
#     10    34
#     11    34
#     12    31
#     13    34
#     14    35
#     ...
#     129706   NaN
#     129707   NaN
#     129708   NaN
#     129709   NaN
#     129710   NaN
#     129711   NaN
#     129712   NaN
#     129713   NaN
#     129714   NaN
#     129715   NaN
#     129716   NaN
#     129717   NaN
#     129718   NaN
#     129719   NaN
#     129720   NaN
#     Length: 129721, dtype: float64

# In[43]:

df1 = pd.DataFrame(np.arange(12.).reshape((4, 3)), columns=list('bcd'))
df1


# Out[43]:

#        b   c   d
#     0  0   1   2
#     1  3   4   5
#     2  6   7   8
#     3  9  10  11
#     
#     [4 rows x 3 columns]

# In[44]:

df2 = pd.DataFrame(np.arange(12.).reshape((4, 3)), columns=list('bde'))
df2


# Out[44]:

#        b   d   e
#     0  0   1   2
#     1  3   4   5
#     2  6   7   8
#     3  9  10  11
#     
#     [4 rows x 3 columns]

# In[45]:

suma_nan = df1 + df2
suma_nan


# Out[45]:

#         b   c   d   e
#     0   0 NaN   3 NaN
#     1   6 NaN   9 NaN
#     2  12 NaN  15 NaN
#     3  18 NaN  21 NaN
#     
#     [4 rows x 4 columns]

# In[46]:

df1.add(df2, fill_value=0) #cambiar el cero para ver como afecta a las funciones


# Out[46]:

#         b   c   d   e
#     0   0   1   3   2
#     1   6   4   9   5
#     2  12   7  15   8
#     3  18  10  21  11
#     
#     [4 rows x 4 columns]

# In[47]:

df1.div(df2, fill_value=1)


# Out[47]:

#         b   c         d         e
#     0 NaN   1  2.000000  0.500000
#     1   1   4  1.250000  0.200000
#     2   1   7  1.142857  0.125000
#     3   1  10  1.100000  0.090909
#     
#     [4 rows x 4 columns]

# In[48]:

df1.apply(lambda x: x + 1)


# Out[48]:

#         b   c   d
#     0   1   2   3
#     1   4   5   6
#     2   7   8   9
#     3  10  11  12
#     
#     [4 rows x 3 columns]

# In[49]:

def mi_incremento(x):
    return x + 1

df1['b'].apply(mi_incremento)


# Out[49]:

#     0     1
#     1     4
#     2     7
#     3    10
#     Name: b, dtype: float64

# #### Ordenando y 'Rankeando' en Pandas

# In[50]:

df1.sort_index(ascending=False, axis=0) # ver como cambia el orden cambiando axis


# Out[50]:

#        b   c   d
#     3  9  10  11
#     2  6   7   8
#     1  3   4   5
#     0  0   1   2
#     
#     [4 rows x 3 columns]

# In[51]:

df1['b'].order()


# Out[51]:

#     0    0
#     1    3
#     2    6
#     3    9
#     Name: b, dtype: float64

# In[52]:

df1.rank(method='max', ascending=False) #method puede ser average, min, max o first
#df1


# Out[52]:

#        b  c  d
#     0  4  4  4
#     1  3  3  3
#     2  2  2  2
#     3  1  1  1
#     
#     [4 rows x 3 columns]

# #### Obteniendo información de nuestros DataFrames

# In[53]:

df_other_excel.describe()


# Out[53]:

#                 1.EDAD  Indice cintura/estatura          BMI      MELANIN  \
#     count  1240.000000              1240.000000  1240.000000  1240.000000   
#     mean     28.525000                 0.482959    24.047971    33.361520   
#     std      10.910274                 0.071698     4.361737     6.719084   
#     min      18.000000                 0.353508    15.077098    21.860000   
#     25%      21.000000                 0.430672    21.005018    29.080000   
#     50%      25.000000                 0.471047    23.145338    31.762500   
#     75%      32.000000                 0.522221    26.273310    35.827500   
#     max      83.000000                 0.839744    48.282380    89.010000   
#     
#                 6.1 TV    6.2 RADIO     6.3 BAÑO     6.4 AUTO  6.5 EMP.DOM.  \
#     count  1240.000000  1240.000000  1240.000000  1240.000000   1240.000000   
#     mean      2.029032     1.352419     1.804839     0.812097      0.250806   
#     std       1.219612     1.111606     1.019887     0.881712      0.510581   
#     min       0.000000     0.000000     0.000000     0.000000      0.000000   
#     25%       1.000000     1.000000     1.000000     0.000000      0.000000   
#     50%       2.000000     1.000000     2.000000     1.000000      0.000000   
#     75%       3.000000     2.000000     2.000000     1.000000      0.000000   
#     max       9.000000    10.000000     6.000000     8.000000      6.000000   
#     
#               6.6 ASP.     6.7 LAV.    6.8 VIDEO     6.9 NEV.    6.10 CONG  \
#     count  1240.000000  1240.000000  1240.000000  1240.000000  1240.000000   
#     mean      0.521774     0.931452     1.169355     1.134677     0.425000   
#     std       0.573431     0.426307     0.828486     0.474115     0.551632   
#     min       0.000000     0.000000     0.000000     0.000000     0.000000   
#     25%       0.000000     1.000000     1.000000     1.000000     0.000000   
#     50%       0.000000     1.000000     1.000000     1.000000     0.000000   
#     75%       1.000000     1.000000     2.000000     1.000000     1.000000   
#     max       6.000000     4.000000     5.000000     7.000000     3.000000   
#     
#             6.11 COMP.  6.12 LAVAP.    6.13 MOTO    6.14 BICI  
#     count  1240.000000  1240.000000  1240.000000  1240.000000  
#     mean      1.795161     0.130645     0.161290     0.641129  
#     std       1.112687     0.348912     0.417284     0.922896  
#     min       0.000000     0.000000     0.000000     0.000000  
#     25%       1.000000     0.000000     0.000000     0.000000  
#     50%       2.000000     0.000000     0.000000     0.000000  
#     75%       2.000000     0.000000     0.000000     1.000000  
#     max       8.000000     2.000000     4.000000     6.000000  
#     
#     [8 rows x 18 columns]

# In[54]:

df_other_excel['BMI'].pct_change()


# Out[54]:

#     0          NaN
#     1    -0.004816
#     2    -0.319773
#     3     0.432081
#     4    -0.239483
#     5     0.172263
#     6     0.032134
#     7    -0.077392
#     8     0.041164
#     9    -0.141685
#     10    0.430176
#     11   -0.233286
#     12    0.110325
#     13   -0.175805
#     14    0.199023
#     ...
#     1225    0.089834
#     1226    0.695716
#     1227   -0.366129
#     1228   -0.132795
#     1229    0.147359
#     1230   -0.080238
#     1231   -0.034148
#     1232   -0.041088
#     1233    0.069675
#     1234   -0.111221
#     1235    0.063143
#     1236    0.222563
#     1237    0.008318
#     1238   -0.168320
#     1239   -0.061667
#     Name: BMI, Length: 1240, dtype: float64

# In[55]:

df_other_excel.BMI.corr(df_other_excel.MELANIN)


# Out[55]:

#     0.0052284140034513692

# In[56]:

df_other_excel.corr()


# Out[56]:

#                                1.EDAD  Indice cintura/estatura       BMI  \
#     1.EDAD                   1.000000                 0.455882  0.355854   
#     Indice cintura/estatura  0.455882                 1.000000  0.891350   
#     BMI                      0.355854                 0.891350  1.000000   
#     MELANIN                 -0.133095                -0.011761  0.005228   
#     6.1 TV                   0.051563                 0.059305  0.058045   
#     6.2 RADIO                0.223177                 0.052280  0.043303   
#     6.3 BAÑO                 0.108949                 0.072535  0.050723   
#     6.4 AUTO                 0.113042                 0.092768  0.069686   
#     6.5 EMP.DOM.             0.062551                 0.054830  0.046267   
#     6.6 ASP.                 0.135241                -0.000157  0.012012   
#     6.7 LAV.                 0.082014                 0.051454  0.030242   
#     6.8 VIDEO                0.079090                 0.073545  0.078969   
#     6.9 NEV.                 0.081967                 0.091598  0.081180   
#     6.10 CONG                0.127175                 0.094373  0.062266   
#     6.11 COMP.              -0.042926                -0.039457 -0.047322   
#     6.12 LAVAP.              0.164093                 0.023680  0.008098   
#     6.13 MOTO               -0.021274                 0.066155  0.065192   
#     6.14 BICI               -0.007164                 0.024171  0.037818   
#     
#                               MELANIN    6.1 TV  6.2 RADIO  6.3 BAÑO  6.4 AUTO  \
#     1.EDAD                  -0.133095  0.051563   0.223177  0.108949  0.113042   
#     Indice cintura/estatura -0.011761  0.059305   0.052280  0.072535  0.092768   
#     BMI                      0.005228  0.058045   0.043303  0.050723  0.069686   
#     MELANIN                  1.000000 -0.008675  -0.092743 -0.046106 -0.064409   
#     6.1 TV                  -0.008675  1.000000   0.464542  0.545713  0.483178   
#     6.2 RADIO               -0.092743  0.464542   1.000000  0.344056  0.295722   
#     6.3 BAÑO                -0.046106  0.545713   0.344056  1.000000  0.495911   
#     6.4 AUTO                -0.064409  0.483178   0.295722  0.495911  1.000000   
#     6.5 EMP.DOM.             0.008169  0.301956   0.172633  0.416458  0.357556   
#     6.6 ASP.                -0.193227  0.316460   0.257016  0.292943  0.275483   
#     6.7 LAV.                -0.119722  0.270832   0.206007  0.260649  0.266317   
#     6.8 VIDEO               -0.019522  0.607787   0.434678  0.442239  0.433623   
#     6.9 NEV.                -0.011398  0.392431   0.262096  0.426619  0.305786   
#     6.10 CONG               -0.080895  0.329546   0.239914  0.329740  0.325285   
#     6.11 COMP.              -0.113526  0.436174   0.288104  0.411390  0.404981   
#     6.12 LAVAP.             -0.058231  0.281269   0.268251  0.241815  0.258261   
#     6.13 MOTO                0.086217  0.052642   0.040918  0.034198  0.106570   
#     6.14 BICI               -0.073781  0.244459   0.279152  0.209356  0.219580   
#     
#                              6.5 EMP.DOM.  6.6 ASP.  6.7 LAV.  6.8 VIDEO  \
#     1.EDAD                       0.062551  0.135241  0.082014   0.079090   
#     Indice cintura/estatura      0.054830 -0.000157  0.051454   0.073545   
#     BMI                          0.046267  0.012012  0.030242   0.078969   
#     MELANIN                      0.008169 -0.193227 -0.119722  -0.019522   
#     6.1 TV                       0.301956  0.316460  0.270832   0.607787   
#     6.2 RADIO                    0.172633  0.257016  0.206007   0.434678   
#     6.3 BAÑO                     0.416458  0.292943  0.260649   0.442239   
#     6.4 AUTO                     0.357556  0.275483  0.266317   0.433623   
#     6.5 EMP.DOM.                 1.000000  0.241836  0.156918   0.277291   
#     6.6 ASP.                     0.241836  1.000000  0.255381   0.311621   
#     6.7 LAV.                     0.156918  0.255381  1.000000   0.245417   
#     6.8 VIDEO                    0.277291  0.311621  0.245417   1.000000   
#     6.9 NEV.                     0.220436  0.186622  0.221414   0.350783   
#     6.10 CONG                    0.220149  0.214391  0.250970   0.290951   
#     6.11 COMP.                   0.297920  0.363713  0.201779   0.391376   
#     6.12 LAVAP.                  0.210077  0.300419  0.136222   0.264032   
#     6.13 MOTO                    0.010754 -0.061911  0.057665   0.063335   
#     6.14 BICI                    0.129504  0.190925  0.150771   0.293834   
#     
#                              6.9 NEV.  6.10 CONG  6.11 COMP.  6.12 LAVAP.  \
#     1.EDAD                   0.081967   0.127175   -0.042926     0.164093   
#     Indice cintura/estatura  0.091598   0.094373   -0.039457     0.023680   
#     BMI                      0.081180   0.062266   -0.047322     0.008098   
#     MELANIN                 -0.011398  -0.080895   -0.113526    -0.058231   
#     6.1 TV                   0.392431   0.329546    0.436174     0.281269   
#     6.2 RADIO                0.262096   0.239914    0.288104     0.268251   
#     6.3 BAÑO                 0.426619   0.329740    0.411390     0.241815   
#     6.4 AUTO                 0.305786   0.325285    0.404981     0.258261   
#     6.5 EMP.DOM.             0.220436   0.220149    0.297920     0.210077   
#     6.6 ASP.                 0.186622   0.214391    0.363713     0.300419   
#     6.7 LAV.                 0.221414   0.250970    0.201779     0.136222   
#     6.8 VIDEO                0.350783   0.290951    0.391376     0.264032   
#     6.9 NEV.                 1.000000   0.271645    0.205329     0.215564   
#     6.10 CONG                0.271645   1.000000    0.174821     0.197717   
#     6.11 COMP.               0.205329   0.174821    1.000000     0.266485   
#     6.12 LAVAP.              0.215564   0.197717    0.266485     1.000000   
#     6.13 MOTO                0.057377   0.066619    0.015589     0.015915   
#     6.14 BICI                0.164039   0.180929    0.268679     0.168276   
#     
#                              6.13 MOTO  6.14 BICI  
#     1.EDAD                   -0.021274  -0.007164  
#     Indice cintura/estatura   0.066155   0.024171  
#     BMI                       0.065192   0.037818  
#     MELANIN                   0.086217  -0.073781  
#     6.1 TV                    0.052642   0.244459  
#     6.2 RADIO                 0.040918   0.279152  
#     6.3 BAÑO                  0.034198   0.209356  
#     6.4 AUTO                  0.106570   0.219580  
#     6.5 EMP.DOM.              0.010754   0.129504  
#     6.6 ASP.                 -0.061911   0.190925  
#     6.7 LAV.                  0.057665   0.150771  
#     6.8 VIDEO                 0.063335   0.293834  
#     6.9 NEV.                  0.057377   0.164039  
#     6.10 CONG                 0.066619   0.180929  
#     6.11 COMP.                0.015589   0.268679  
#     6.12 LAVAP.               0.015915   0.168276  
#     6.13 MOTO                 1.000000   0.058208  
#     6.14 BICI                 0.058208   1.000000  
#     
#     [18 rows x 18 columns]

# #### Manejando Datos Perdidos

# In[57]:

suma_nan.isnull()


# Out[57]:

#            b     c      d     e
#     0  False  True  False  True
#     1  False  True  False  True
#     2  False  True  False  True
#     3  False  True  False  True
#     
#     [4 rows x 4 columns]

# In[58]:

suma_nan.fillna(10)


# Out[58]:

#         b   c   d   e
#     0   0  10   3  10
#     1   6  10   9  10
#     2  12  10  15  10
#     3  18  10  21  10
#     
#     [4 rows x 4 columns]

# In[59]:

suma_nan.interpolate(method='linear', axis=1) #cambiar axis y ver que sucede


# Out[59]:

#         b     c   d   e
#     0   0   1.5   3   3
#     1   6   7.5   9   9
#     2  12  13.5  15  15
#     3  18  19.5  21  21
#     
#     [4 rows x 4 columns]

# In[60]:

get_ipython().magic(u'pinfo suma_nan.interpolate')


# In[61]:

import scipy.stats as stats

print stats.ttest_1samp(df_other_excel.BMI, popmean=df_other_excel.BMI.mean())
print stats.ttest_1samp(df_other_excel.BMI, popmean=24.0)


# Out[61]:

#     (array(0.0), 1.0)
#     (array(0.3872841091347322), 0.69861240246806866)
# 

# #### Merge de DataFrames en Pandas

# In[75]:

merged = pd.merge(_59, _58, on='d', how='outer')
merged
#left: use only keys from left frame (SQL: left outer join)
#right: use only keys from right frame (SQL: right outer join)
#outer: use union of keys from both frames (SQL: full outer join)
#inner: use intersection of keys from both frames (SQL: inner join)


# Out[75]:

#        b_x   c_x   d  e_x  b_y  c_y  e_y
#     0    0   1.5   3    3    0   10   10
#     1    6   7.5   9    9    6   10   10
#     2   12  13.5  15   15   12   10   10
#     3   18  19.5  21   21   18   10   10
#     
#     [4 rows x 7 columns]

# In[83]:

merged = pd.merge(_59, _58, on=['d', 'b', 'c', 'e'], how='inner')
merged


# Out[83]:

#     Empty DataFrame
#     Columns: [b, c, d, e]
#     Index: []
#     
#     [0 rows x 4 columns]

# In[81]:

merged = pd.merge(_59, _58, on=['d', 'b', 'c', 'e'], how='outer')
merged


# Out[81]:

#         b     c   d   e
#     0   0   1.5   3   3
#     1   6   7.5   9   9
#     2  12  13.5  15  15
#     3  18  19.5  21  21
#     4   0  10.0   3  10
#     5   6  10.0   9  10
#     6  12  10.0  15  10
#     7  18  10.0  21  10
#     
#     [8 rows x 4 columns]

# In[103]:

mi_serie_df = mi_serie_med.to_frame()
mi_serie_df.columns = ['date']
merged = pd.merge(df_txt, mi_serie_df, on='date', how='outer')
merged
print mi_serie_df.count()
print df_txt.count()
print merged.count()


# Out[103]:

#     date    37153
#     dtype: int64
#     medidor      129721
#     date         129721
#     value        129721
#     nueva_col    129721
#     dtype: int64
#     medidor      129721
#     date         159589
#     value        129721
#     nueva_col    129721
#     dtype: int64
# 

# In[111]:

merged_inter = merged.interpolate()
merged_inter.count()


# Out[111]:

#     medidor      159589
#     date         159589
#     value        159589
#     nueva_col    159589
#     dtype: int64

# In[119]:

pd.concat([df_txt['date'], df_other_excel['BMI']], axis=1) #notar que ocurre al cambiar el axis


# Out[119]:

#                       date        BMI
#     0  2013-11-28 11:00:00  27.099205
#     1  2013-11-28 11:00:00  26.968685
#     2  2013-11-28 11:00:00  18.344819
#     3  2013-11-28 11:00:00  26.271270
#     4  2013-11-28 11:00:00  19.979754
#     5  2013-12-01 09:30:00  23.421517
#     6  2013-12-05 15:45:00  24.174154
#     7  2013-11-18 22:15:00  22.303270
#     8  2013-11-18 22:15:00  23.221356
#     9  2013-11-18 22:15:00  19.931230
#     10 2013-11-18 22:15:00  28.505164
#     11 2013-11-18 22:15:00  21.855316
#     12 2013-11-18 22:15:00  24.266496
#     13 2013-11-18 22:15:00  20.000330
#     14 2013-11-18 22:15:00  23.980853
#     15 2013-11-18 22:15:00  19.962426
#     16 2013-11-18 22:15:00  22.551112
#     17 2013-11-18 22:15:00  20.101116
#     18 2013-11-18 22:15:00  24.039640
#     19 2013-11-18 22:30:00  23.077207
#     20 2013-11-18 22:30:00  20.356107
#     21 2013-11-18 22:30:00  22.188490
#     22 2013-11-18 22:30:00  23.539280
#     23 2013-11-18 22:30:00  24.628922
#     24 2013-11-18 22:30:00  25.048006
#     25 2013-11-18 22:30:00  19.855726
#     26 2013-11-18 22:30:00  21.244715
#     27 2013-11-18 22:30:00  27.101699
#     28 2013-11-18 22:30:00  24.946913
#     29 2013-11-18 22:30:00  31.132161
#     30 2013-11-18 22:30:00  19.147234
#     31 2013-11-18 22:45:00  23.289242
#     32 2013-11-18 22:45:00  19.842533
#     33 2013-11-18 22:45:00  20.631610
#     34 2013-11-18 22:45:00  22.669892
#     35 2013-11-18 22:45:00  25.613866
#     36 2013-11-18 22:45:00  20.976813
#     37 2013-11-18 22:45:00  34.629867
#     38 2013-11-18 22:45:00  27.997471
#     39 2013-11-18 22:45:00  32.178503
#     40 2013-11-18 22:45:00  23.888441
#     41 2013-11-18 22:45:00  23.688924
#     42 2013-11-18 22:45:00  23.327641
#     43 2013-11-18 23:00:00  29.219373
#     44 2013-11-18 23:00:00  23.971775
#     45 2013-11-18 23:00:00  24.345599
#     46 2013-11-18 23:00:00  33.345521
#     47 2013-11-18 23:00:00  26.589863
#     48 2013-11-18 23:00:00  32.820844
#     49 2013-11-18 23:00:00  32.699148
#     50 2013-11-18 23:00:00  22.074008
#     51 2013-11-18 23:00:00  23.129773
#     52 2013-11-18 23:00:00  19.143417
#     53 2013-11-18 23:00:00  25.626807
#     54 2013-11-18 23:00:00  20.263061
#     55 2013-11-18 23:15:00  16.466573
#     56 2013-11-18 23:15:00  19.292369
#     57 2013-11-18 23:15:00  22.093170
#     58 2013-11-18 23:15:00  21.171885
#     59 2013-11-18 23:15:00  21.233717
#                        ...        ...
#     
#     [129721 rows x 2 columns]

# In[125]:

print suma_nan
print df1
suma_nan.combine_first(df1)


# Out[125]:

#         b   c   d   e
#     0   0 NaN   3 NaN
#     1   6 NaN   9 NaN
#     2  12 NaN  15 NaN
#     3  18 NaN  21 NaN
#     
#     [4 rows x 4 columns]
#        b   c   d
#     0  0   1   2
#     1  3   4   5
#     2  6   7   8
#     3  9  10  11
#     
#     [4 rows x 3 columns]
# 

#         b   c   d   e
#     0   0   1   3 NaN
#     1   6   4   9 NaN
#     2  12   7  15 NaN
#     3  18  10  21 NaN
#     
#     [4 rows x 4 columns]

# In[ ]:



